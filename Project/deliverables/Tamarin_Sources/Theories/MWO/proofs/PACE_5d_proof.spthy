theory PACE_5d begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman
functions: fst/1, h/1, mac/2, map/2, pair/2, sdec/2, senc/2, snd/1
equations:
    fst(<x.1, x.2>) = x.1,
    sdec(senc(x.1, x.2), x.2) = x.1,
    snd(<x.1, x.2>) = x.2



rule (modulo E) Register_shared_key:
   [ Fr( ~kAB ) ] --> [ !LtMac( $A, $B, ~kAB ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Reveal_shk_A:
   [ !LtMac( A, B, kAB ) ] --[ Rev( A ) ]-> [ Out( kAB ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Reveal_shk_B:
   [ !LtMac( A, B, kAB ) ] --[ Rev( B ) ]-> [ Out( kAB ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Initialise_A:
   [ Fr( ~id ), !LtMac( A, B, kAB ) ]
  --[ Create_A( A, ~id, 'roleA' ) ]->
   [ St_A_1( A, ~id, B, kAB, $p ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Initialise_B:
   [ Fr( ~id ), !LtMac( A, B, kAB ) ]
  --[ Create_B( B, ~id, 'roleB' ) ]->
   [ St_B_1( B, ~id, A, kAB ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) A_1_send:
   [ Fr( ~x ), Fr( ~s ), St_A_1( A, id, B, kAB, p ) ]
  --[ Send( A, B, <map(~s, p)^~x, p, senc(~s, h(kAB))> ) ]->
   [
   St_A_2( A, id, B, kAB, p, ~x, ~s ),
   Out( <map(~s, p)^~x, p, senc(~s, h(kAB))> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) B_1_receive:
   [ St_B_1( B, id, A, kAB ), In( <X, p, senc(s, h(kAB))> ) ]
  --[ Recv( B, A, <X, p, senc(s, h(kAB))> ) ]->
   [ St_B_2( B, id, A, kAB, X, p, s ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) B_2_send:
   [ Fr( ~y ), St_B_2( B, id, A, kAB, X, p, s ) ]
  --[ Send( B, A, map(s, p)^~y ), Neq( X, map(s, p)^~y ) ]->
   [ St_B_3( B, id, A, kAB, X, p, s, ~y ), Out( map(s, p)^~y ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) A_2_receive:
   [ St_A_2( A, id, B, kAB, p, x, s ), In( Y ) ]
  --[ Recv( A, B, Y ), Neq( map(s, p)^x, Y ) ]->
   [ St_A_3( A, id, B, kAB, p, x, s, Y ) ]

  /*
  rule (modulo AC) A_2_receive:
     [ St_A_2( A, id, B, kAB, p, x, s ), In( Y ) ]
    --[ Recv( A, B, Y ), Neq( z, Y ) ]->
     [ St_A_3( A, id, B, kAB, p, x, s, Y ) ]
    variants (modulo AC)
    1. p     = p.10
       s     = s.10
       x     = x.10
       z     = map(s.10, p.10)^x.10
    
    2. p     = p.10
       s     = s.10
       x     = one
       z     = map(s.10, p.10)
  */

rule (modulo E) A_3_send:
   [ St_A_3( A, id, B, kAB, p, x, s, Y ) ]
  --[
  Send( A, B, mac(h(Y^x), Y) ),
  Running( A, B, <'R', 'I', map(s, p)^x, Y> )
  ]->
   [ St_A_4( A, id, B, kAB, p, x, s, Y ), Out( mac(h(Y^x), Y) ) ]

  /*
  rule (modulo AC) A_3_send:
     [ St_A_3( A, id, B, kAB, p, x, s, Y ) ]
    --[ Send( A, B, mac(h(z), Y) ), Running( A, B, <'R', 'I', z.1, Y> )
    ]->
     [ St_A_4( A, id, B, kAB, p, x, s, Y ), Out( mac(h(z), Y) ) ]
    variants (modulo AC)
     1. Y     = Y.18
        p     = p.21
        s     = s.22
        x     = one
        z     = Y.18
        z.1   = map(s.22, p.21)
    
     2. Y     = Y.19
        p     = p.22
        s     = s.23
        x     = x.24
        z     = Y.19^x.24
        z.1   = map(s.23, p.22)^x.24
    
     3. Y     = z.20^inv(x.19)
        p     = p.17
        s     = s.18
        x     = x.19
        z     = z.20
        z.1   = map(s.18, p.17)^x.19
    
     4. Y     = z.25^x.37
        p     = p.22
        s     = s.23
        x     = inv(x.37)
        z     = z.25
        z.1   = map(s.23, p.22)^inv(x.37)
    
     5. Y     = z.26^(x.38*inv(x.39))
        p     = p.23
        s     = s.24
        x     = (x.39*inv(x.38))
        z     = z.26
        z.1   = map(s.24, p.23)^(x.39*inv(x.38))
    
     6. Y     = x.36^x.37
        p     = p.22
        s     = s.23
        x     = x.24
        z     = x.36^(x.24*x.37)
        z.1   = map(s.23, p.22)^x.24
    
     7. Y     = x.36^(x.37*inv(x.24))
        p     = p.22
        s     = s.23
        x     = x.24
        z     = x.36^x.37
        z.1   = map(s.23, p.22)^x.24
    
     8. Y     = x.37^inv((x.25*x.39))
        p     = p.23
        s     = s.24
        x     = x.25
        z     = x.37^inv(x.39)
        z.1   = map(s.24, p.23)^x.25
    
     9. Y     = x.37^(x.38*x.39)
        p     = p.23
        s     = s.24
        x     = inv(x.38)
        z     = x.37^x.39
        z.1   = map(s.24, p.23)^inv(x.38)
    
    10. Y     = x.38^(x.39*x.40*inv(x.41))
        p     = p.24
        s     = s.25
        x     = (x.41*inv(x.39))
        z     = x.38^x.40
        z.1   = map(s.25, p.24)^(x.41*inv(x.39))
    
    11. Y     = x.38^(x.39*inv((x.26*x.41)))
        p     = p.24
        s     = s.25
        x     = x.26
        z     = x.38^(x.39*inv(x.41))
        z.1   = map(s.25, p.24)^x.26
    
    12. Y     = x.38^(x.39*inv((x.40*x.41)))
        p     = p.24
        s     = s.25
        x     = (x.40*inv(x.39))
        z     = x.38^inv(x.41)
        z.1   = map(s.25, p.24)^(x.40*inv(x.39))
    
    13. Y     = x.39^(x.40*x.41*inv((x.42*x.43)))
        p     = p.25
        s     = s.26
        x     = (x.42*inv(x.40))
        z     = x.39^(x.41*inv(x.43))
        z.1   = map(s.26, p.25)^(x.42*inv(x.40))
    
    14. Y     = x.41^x.42
        p     = p.27
        s     = s.28
        x     = inv((x.42*x.47))
        z     = x.41^inv(x.47)
        z.1   = map(s.28, p.27)^inv((x.42*x.47))
    
    15. Y     = x.41^x.42
        p     = p.27
        s     = s.28
        x     = (x.47*inv(x.42))
        z     = x.41^x.47
        z.1   = map(s.28, p.27)^(x.47*inv(x.42))
    
    16. Y     = x.41^inv(x.42)
        p     = p.27
        s     = s.28
        x     = inv(x.47)
        z     = x.41^inv((x.42*x.47))
        z.1   = map(s.28, p.27)^inv(x.47)
    
    17. Y     = x.41^inv(x.42)
        p     = p.27
        s     = s.28
        x     = (x.42*x.47)
        z     = x.41^x.47
        z.1   = map(s.28, p.27)^(x.42*x.47)
    
    18. Y     = x.42^x.43
        p     = p.28
        s     = s.29
        x     = (x.48*inv((x.43*x.49)))
        z     = x.42^(x.48*inv(x.49))
        z.1   = map(s.29, p.28)^(x.48*inv((x.43*x.49)))
    
    19. Y     = x.42^inv(x.43)
        p     = p.28
        s     = s.29
        x     = (x.48*inv(x.49))
        z     = x.42^(x.48*inv((x.43*x.49)))
        z.1   = map(s.29, p.28)^(x.48*inv(x.49))
    
    20. Y     = x.42^inv((x.43*x.44))
        p     = p.28
        s     = s.29
        x     = (x.43*x.49)
        z     = x.42^(x.49*inv(x.44))
        z.1   = map(s.29, p.28)^(x.43*x.49)
    
    21. Y     = x.42^inv((x.43*x.44))
        p     = p.28
        s     = s.29
        x     = (x.43*inv(x.49))
        z     = x.42^inv((x.44*x.49))
        z.1   = map(s.29, p.28)^(x.43*inv(x.49))
    
    22. Y     = x.42^(x.43*x.44)
        p     = p.28
        s     = s.29
        x     = inv((x.43*x.49))
        z     = x.42^(x.44*inv(x.49))
        z.1   = map(s.29, p.28)^inv((x.43*x.49))
    
    23. Y     = x.42^(x.43*x.44)
        p     = p.28
        s     = s.29
        x     = (x.49*inv(x.43))
        z     = x.42^(x.44*x.49)
        z.1   = map(s.29, p.28)^(x.49*inv(x.43))
    
    24. Y     = x.42^(x.43*inv(x.44))
        p     = p.28
        s     = s.29
        x     = inv(x.49)
        z     = x.42^(x.43*inv((x.44*x.49)))
        z.1   = map(s.29, p.28)^inv(x.49)
    
    25. Y     = x.42^(x.43*inv(x.44))
        p     = p.28
        s     = s.29
        x     = inv((x.43*x.49))
        z     = x.42^inv((x.44*x.49))
        z.1   = map(s.29, p.28)^inv((x.43*x.49))
    
    26. Y     = x.42^(x.43*inv(x.44))
        p     = p.28
        s     = s.29
        x     = (x.44*x.49)
        z     = x.42^(x.43*x.49)
        z.1   = map(s.29, p.28)^(x.44*x.49)
    
    27. Y     = x.42^(x.43*inv(x.44))
        p     = p.28
        s     = s.29
        x     = (x.44*x.49*inv(x.43))
        z     = x.42^x.49
        z.1   = map(s.29, p.28)^(x.44*x.49*inv(x.43))
    
    28. Y     = x.42^(x.43*inv(x.44))
        p     = p.28
        s     = s.29
        x     = (x.44*inv((x.43*x.49)))
        z     = x.42^inv(x.49)
        z.1   = map(s.29, p.28)^(x.44*inv((x.43*x.49)))
    
    29. Y     = x.43^inv((x.44*x.45))
        p     = p.29
        s     = s.30
        x     = (x.44*x.50*inv(x.51))
        z     = x.43^(x.50*inv((x.45*x.51)))
        z.1   = map(s.30, p.29)^(x.44*x.50*inv(x.51))
    
    30. Y     = x.43^(x.44*x.45)
        p     = p.29
        s     = s.30
        x     = (x.50*inv((x.44*x.51)))
        z     = x.43^(x.45*x.50*inv(x.51))
        z.1   = map(s.30, p.29)^(x.50*inv((x.44*x.51)))
    
    31. Y     = x.43^(x.44*x.45*inv(x.46))
        p     = p.29
        s     = s.30
        x     = inv((x.44*x.51))
        z     = x.43^(x.45*inv((x.46*x.51)))
        z.1   = map(s.30, p.29)^inv((x.44*x.51))
    
    32. Y     = x.43^(x.44*x.45*inv(x.46))
        p     = p.29
        s     = s.30
        x     = (x.46*x.51*inv(x.44))
        z     = x.43^(x.45*x.51)
        z.1   = map(s.30, p.29)^(x.46*x.51*inv(x.44))
    
    33. Y     = x.43^(x.44*x.45*inv(x.46))
        p     = p.29
        s     = s.30
        x     = (x.46*inv((x.44*x.51)))
        z     = x.43^(x.45*inv(x.51))
        z.1   = map(s.30, p.29)^(x.46*inv((x.44*x.51)))
    
    34. Y     = x.43^(x.44*inv(x.45))
        p     = p.29
        s     = s.30
        x     = (x.45*x.50*inv((x.44*x.51)))
        z     = x.43^(x.50*inv(x.51))
        z.1   = map(s.30, p.29)^(x.45*x.50*inv((x.44*x.51)))
    
    35. Y     = x.43^(x.44*inv(x.45))
        p     = p.29
        s     = s.30
        x     = (x.50*inv(x.51))
        z     = x.43^(x.44*x.50*inv((x.45*x.51)))
        z.1   = map(s.30, p.29)^(x.50*inv(x.51))
    
    36. Y     = x.43^(x.44*inv(x.45))
        p     = p.29
        s     = s.30
        x     = (x.50*inv((x.44*x.51)))
        z     = x.43^(x.50*inv((x.45*x.51)))
        z.1   = map(s.30, p.29)^(x.50*inv((x.44*x.51)))
    
    37. Y     = x.43^(x.44*inv((x.45*x.46)))
        p     = p.29
        s     = s.30
        x     = (x.45*x.51)
        z     = x.43^(x.44*x.51*inv(x.46))
        z.1   = map(s.30, p.29)^(x.45*x.51)
    
    38. Y     = x.43^(x.44*inv((x.45*x.46)))
        p     = p.29
        s     = s.30
        x     = (x.45*x.51*inv(x.44))
        z     = x.43^(x.51*inv(x.46))
        z.1   = map(s.30, p.29)^(x.45*x.51*inv(x.44))
    
    39. Y     = x.43^(x.44*inv((x.45*x.46)))
        p     = p.29
        s     = s.30
        x     = (x.45*inv(x.51))
        z     = x.43^(x.44*inv((x.46*x.51)))
        z.1   = map(s.30, p.29)^(x.45*inv(x.51))
    
    40. Y     = x.43^(x.44*inv((x.45*x.46)))
        p     = p.29
        s     = s.30
        x     = (x.45*inv((x.44*x.51)))
        z     = x.43^inv((x.46*x.51))
        z.1   = map(s.30, p.29)^(x.45*inv((x.44*x.51)))
    
    41. Y     = x.44^(x.45*x.46*inv(x.47))
        p     = p.30
        s     = s.31
        x     = (x.47*x.52*inv((x.45*x.53)))
        z     = x.44^(x.46*x.52*inv(x.53))
        z.1   = map(s.31, p.30)^(x.47*x.52*inv((x.45*x.53)))
    
    42. Y     = x.44^(x.45*x.46*inv(x.47))
        p     = p.30
        s     = s.31
        x     = (x.52*inv((x.45*x.53)))
        z     = x.44^(x.46*x.52*inv((x.47*x.53)))
        z.1   = map(s.31, p.30)^(x.52*inv((x.45*x.53)))
    
    43. Y     = x.44^(x.45*x.46*inv((x.47*x.48)))
        p     = p.30
        s     = s.31
        x     = (x.47*x.53*inv(x.45))
        z     = x.44^(x.46*x.53*inv(x.48))
        z.1   = map(s.31, p.30)^(x.47*x.53*inv(x.45))
    
    44. Y     = x.44^(x.45*x.46*inv((x.47*x.48)))
        p     = p.30
        s     = s.31
        x     = (x.47*inv((x.45*x.53)))
        z     = x.44^(x.46*inv((x.48*x.53)))
        z.1   = map(s.31, p.30)^(x.47*inv((x.45*x.53)))
    
    45. Y     = x.44^(x.45*inv((x.46*x.47)))
        p     = p.30
        s     = s.31
        x     = (x.46*x.52*inv(x.53))
        z     = x.44^(x.45*x.52*inv((x.47*x.53)))
        z.1   = map(s.31, p.30)^(x.46*x.52*inv(x.53))
    
    46. Y     = x.44^(x.45*inv((x.46*x.47)))
        p     = p.30
        s     = s.31
        x     = (x.46*x.52*inv((x.45*x.53)))
        z     = x.44^(x.52*inv((x.47*x.53)))
        z.1   = map(s.31, p.30)^(x.46*x.52*inv((x.45*x.53)))
    
    47. Y     = x.45^(x.46*x.47*inv((x.48*x.49)))
        p     = p.31
        s     = s.32
        x     = (x.48*x.54*inv((x.46*x.55)))
        z     = x.45^(x.47*x.54*inv((x.49*x.55)))
        z.1   = map(s.32, p.31)^(x.48*x.54*inv((x.46*x.55)))
  */

rule (modulo E) B_3_receive:
   [
   St_B_3( B, id, A, kAB, X, p, s, y ), In( mac(h(X^y), map(s, p)^y) )
   ]
  --[
  Recv( B, A, mac(h(X^y), map(s, p)^y) ),
  Commit( B, A, <'R', 'I', X, map(s, p)^y> )
  ]->
   [ St_B_4( B, id, A, kAB, X, p, s, y ) ]

  /*
  rule (modulo AC) B_3_receive:
     [ St_B_3( B, id, A, kAB, X, p, s, y ), In( mac(h(z), z.1) ) ]
    --[
    Recv( B, A, mac(h(z), z.1) ), Commit( B, A, <'R', 'I', X, z.1> )
    ]->
     [ St_B_4( B, id, A, kAB, X, p, s, y ) ]
    variants (modulo AC)
     1. X     = X.16
        p     = p.19
        s     = s.20
        y     = one
        z     = X.16
        z.1   = map(s.20, p.19)
    
     2. X     = X.17
        p     = p.20
        s     = s.21
        y     = y.22
        z     = X.17^y.22
        z.1   = map(s.21, p.20)^y.22
    
     3. X     = z.18^inv(y.17)
        p     = p.15
        s     = s.16
        y     = y.17
        z     = z.18
        z.1   = map(s.16, p.15)^y.17
    
     4. X     = z.23^x.33
        p     = p.20
        s     = s.21
        y     = inv(x.33)
        z     = z.23
        z.1   = map(s.21, p.20)^inv(x.33)
    
     5. X     = z.24^(x.34*inv(x.35))
        p     = p.21
        s     = s.22
        y     = (x.35*inv(x.34))
        z     = z.24
        z.1   = map(s.22, p.21)^(x.35*inv(x.34))
    
     6. X     = x.32^x.33
        p     = p.20
        s     = s.21
        y     = y.22
        z     = x.32^(y.22*x.33)
        z.1   = map(s.21, p.20)^y.22
    
     7. X     = x.32^(x.33*inv(y.22))
        p     = p.20
        s     = s.21
        y     = y.22
        z     = x.32^x.33
        z.1   = map(s.21, p.20)^y.22
    
     8. X     = x.33^inv((y.23*x.35))
        p     = p.21
        s     = s.22
        y     = y.23
        z     = x.33^inv(x.35)
        z.1   = map(s.22, p.21)^y.23
    
     9. X     = x.33^(x.34*x.35)
        p     = p.21
        s     = s.22
        y     = inv(x.34)
        z     = x.33^x.35
        z.1   = map(s.22, p.21)^inv(x.34)
    
    10. X     = x.34^(x.35*x.36*inv(x.37))
        p     = p.22
        s     = s.23
        y     = (x.37*inv(x.35))
        z     = x.34^x.36
        z.1   = map(s.23, p.22)^(x.37*inv(x.35))
    
    11. X     = x.34^(x.35*inv((y.24*x.37)))
        p     = p.22
        s     = s.23
        y     = y.24
        z     = x.34^(x.35*inv(x.37))
        z.1   = map(s.23, p.22)^y.24
    
    12. X     = x.34^(x.35*inv((x.36*x.37)))
        p     = p.22
        s     = s.23
        y     = (x.36*inv(x.35))
        z     = x.34^inv(x.37)
        z.1   = map(s.23, p.22)^(x.36*inv(x.35))
    
    13. X     = x.35^(x.36*x.37*inv((x.38*x.39)))
        p     = p.23
        s     = s.24
        y     = (x.38*inv(x.36))
        z     = x.35^(x.37*inv(x.39))
        z.1   = map(s.24, p.23)^(x.38*inv(x.36))
    
    14. X     = x.37^x.38
        p     = p.25
        s     = s.26
        y     = inv((x.38*x.43))
        z     = x.37^inv(x.43)
        z.1   = map(s.26, p.25)^inv((x.38*x.43))
    
    15. X     = x.37^x.38
        p     = p.25
        s     = s.26
        y     = (x.43*inv(x.38))
        z     = x.37^x.43
        z.1   = map(s.26, p.25)^(x.43*inv(x.38))
    
    16. X     = x.37^inv(x.38)
        p     = p.25
        s     = s.26
        y     = inv(x.43)
        z     = x.37^inv((x.38*x.43))
        z.1   = map(s.26, p.25)^inv(x.43)
    
    17. X     = x.37^inv(x.38)
        p     = p.25
        s     = s.26
        y     = (x.38*x.43)
        z     = x.37^x.43
        z.1   = map(s.26, p.25)^(x.38*x.43)
    
    18. X     = x.38^x.39
        p     = p.26
        s     = s.27
        y     = (x.44*inv((x.39*x.45)))
        z     = x.38^(x.44*inv(x.45))
        z.1   = map(s.27, p.26)^(x.44*inv((x.39*x.45)))
    
    19. X     = x.38^inv(x.39)
        p     = p.26
        s     = s.27
        y     = (x.44*inv(x.45))
        z     = x.38^(x.44*inv((x.39*x.45)))
        z.1   = map(s.27, p.26)^(x.44*inv(x.45))
    
    20. X     = x.38^inv((x.39*x.40))
        p     = p.26
        s     = s.27
        y     = (x.39*x.45)
        z     = x.38^(x.45*inv(x.40))
        z.1   = map(s.27, p.26)^(x.39*x.45)
    
    21. X     = x.38^inv((x.39*x.40))
        p     = p.26
        s     = s.27
        y     = (x.39*inv(x.45))
        z     = x.38^inv((x.40*x.45))
        z.1   = map(s.27, p.26)^(x.39*inv(x.45))
    
    22. X     = x.38^(x.39*x.40)
        p     = p.26
        s     = s.27
        y     = inv((x.39*x.45))
        z     = x.38^(x.40*inv(x.45))
        z.1   = map(s.27, p.26)^inv((x.39*x.45))
    
    23. X     = x.38^(x.39*x.40)
        p     = p.26
        s     = s.27
        y     = (x.45*inv(x.39))
        z     = x.38^(x.40*x.45)
        z.1   = map(s.27, p.26)^(x.45*inv(x.39))
    
    24. X     = x.38^(x.39*inv(x.40))
        p     = p.26
        s     = s.27
        y     = inv(x.45)
        z     = x.38^(x.39*inv((x.40*x.45)))
        z.1   = map(s.27, p.26)^inv(x.45)
    
    25. X     = x.38^(x.39*inv(x.40))
        p     = p.26
        s     = s.27
        y     = inv((x.39*x.45))
        z     = x.38^inv((x.40*x.45))
        z.1   = map(s.27, p.26)^inv((x.39*x.45))
    
    26. X     = x.38^(x.39*inv(x.40))
        p     = p.26
        s     = s.27
        y     = (x.40*x.45)
        z     = x.38^(x.39*x.45)
        z.1   = map(s.27, p.26)^(x.40*x.45)
    
    27. X     = x.38^(x.39*inv(x.40))
        p     = p.26
        s     = s.27
        y     = (x.40*x.45*inv(x.39))
        z     = x.38^x.45
        z.1   = map(s.27, p.26)^(x.40*x.45*inv(x.39))
    
    28. X     = x.38^(x.39*inv(x.40))
        p     = p.26
        s     = s.27
        y     = (x.40*inv((x.39*x.45)))
        z     = x.38^inv(x.45)
        z.1   = map(s.27, p.26)^(x.40*inv((x.39*x.45)))
    
    29. X     = x.39^inv((x.40*x.41))
        p     = p.27
        s     = s.28
        y     = (x.40*x.46*inv(x.47))
        z     = x.39^(x.46*inv((x.41*x.47)))
        z.1   = map(s.28, p.27)^(x.40*x.46*inv(x.47))
    
    30. X     = x.39^(x.40*x.41)
        p     = p.27
        s     = s.28
        y     = (x.46*inv((x.40*x.47)))
        z     = x.39^(x.41*x.46*inv(x.47))
        z.1   = map(s.28, p.27)^(x.46*inv((x.40*x.47)))
    
    31. X     = x.39^(x.40*x.41*inv(x.42))
        p     = p.27
        s     = s.28
        y     = inv((x.40*x.47))
        z     = x.39^(x.41*inv((x.42*x.47)))
        z.1   = map(s.28, p.27)^inv((x.40*x.47))
    
    32. X     = x.39^(x.40*x.41*inv(x.42))
        p     = p.27
        s     = s.28
        y     = (x.42*x.47*inv(x.40))
        z     = x.39^(x.41*x.47)
        z.1   = map(s.28, p.27)^(x.42*x.47*inv(x.40))
    
    33. X     = x.39^(x.40*x.41*inv(x.42))
        p     = p.27
        s     = s.28
        y     = (x.42*inv((x.40*x.47)))
        z     = x.39^(x.41*inv(x.47))
        z.1   = map(s.28, p.27)^(x.42*inv((x.40*x.47)))
    
    34. X     = x.39^(x.40*inv(x.41))
        p     = p.27
        s     = s.28
        y     = (x.41*x.46*inv((x.40*x.47)))
        z     = x.39^(x.46*inv(x.47))
        z.1   = map(s.28, p.27)^(x.41*x.46*inv((x.40*x.47)))
    
    35. X     = x.39^(x.40*inv(x.41))
        p     = p.27
        s     = s.28
        y     = (x.46*inv(x.47))
        z     = x.39^(x.40*x.46*inv((x.41*x.47)))
        z.1   = map(s.28, p.27)^(x.46*inv(x.47))
    
    36. X     = x.39^(x.40*inv(x.41))
        p     = p.27
        s     = s.28
        y     = (x.46*inv((x.40*x.47)))
        z     = x.39^(x.46*inv((x.41*x.47)))
        z.1   = map(s.28, p.27)^(x.46*inv((x.40*x.47)))
    
    37. X     = x.39^(x.40*inv((x.41*x.42)))
        p     = p.27
        s     = s.28
        y     = (x.41*x.47)
        z     = x.39^(x.40*x.47*inv(x.42))
        z.1   = map(s.28, p.27)^(x.41*x.47)
    
    38. X     = x.39^(x.40*inv((x.41*x.42)))
        p     = p.27
        s     = s.28
        y     = (x.41*x.47*inv(x.40))
        z     = x.39^(x.47*inv(x.42))
        z.1   = map(s.28, p.27)^(x.41*x.47*inv(x.40))
    
    39. X     = x.39^(x.40*inv((x.41*x.42)))
        p     = p.27
        s     = s.28
        y     = (x.41*inv(x.47))
        z     = x.39^(x.40*inv((x.42*x.47)))
        z.1   = map(s.28, p.27)^(x.41*inv(x.47))
    
    40. X     = x.39^(x.40*inv((x.41*x.42)))
        p     = p.27
        s     = s.28
        y     = (x.41*inv((x.40*x.47)))
        z     = x.39^inv((x.42*x.47))
        z.1   = map(s.28, p.27)^(x.41*inv((x.40*x.47)))
    
    41. X     = x.40^(x.41*x.42*inv(x.43))
        p     = p.28
        s     = s.29
        y     = (x.43*x.48*inv((x.41*x.49)))
        z     = x.40^(x.42*x.48*inv(x.49))
        z.1   = map(s.29, p.28)^(x.43*x.48*inv((x.41*x.49)))
    
    42. X     = x.40^(x.41*x.42*inv(x.43))
        p     = p.28
        s     = s.29
        y     = (x.48*inv((x.41*x.49)))
        z     = x.40^(x.42*x.48*inv((x.43*x.49)))
        z.1   = map(s.29, p.28)^(x.48*inv((x.41*x.49)))
    
    43. X     = x.40^(x.41*x.42*inv((x.43*x.44)))
        p     = p.28
        s     = s.29
        y     = (x.43*x.49*inv(x.41))
        z     = x.40^(x.42*x.49*inv(x.44))
        z.1   = map(s.29, p.28)^(x.43*x.49*inv(x.41))
    
    44. X     = x.40^(x.41*x.42*inv((x.43*x.44)))
        p     = p.28
        s     = s.29
        y     = (x.43*inv((x.41*x.49)))
        z     = x.40^(x.42*inv((x.44*x.49)))
        z.1   = map(s.29, p.28)^(x.43*inv((x.41*x.49)))
    
    45. X     = x.40^(x.41*inv((x.42*x.43)))
        p     = p.28
        s     = s.29
        y     = (x.42*x.48*inv(x.49))
        z     = x.40^(x.41*x.48*inv((x.43*x.49)))
        z.1   = map(s.29, p.28)^(x.42*x.48*inv(x.49))
    
    46. X     = x.40^(x.41*inv((x.42*x.43)))
        p     = p.28
        s     = s.29
        y     = (x.42*x.48*inv((x.41*x.49)))
        z     = x.40^(x.48*inv((x.43*x.49)))
        z.1   = map(s.29, p.28)^(x.42*x.48*inv((x.41*x.49)))
    
    47. X     = x.41^(x.42*x.43*inv((x.44*x.45)))
        p     = p.29
        s     = s.30
        y     = (x.44*x.50*inv((x.42*x.51)))
        z     = x.41^(x.43*x.50*inv((x.45*x.51)))
        z.1   = map(s.30, p.29)^(x.44*x.50*inv((x.42*x.51)))
  */

rule (modulo E) B_4_send:
   [ St_B_4( B, id, A, kAB, X, p, s, y ) ]
  --[
  Send( B, A, mac(h(X^y), X) ),
  Running( B, A, <'I', 'R', X, map(s, p)^y> ), Secret( B, h(X^y) ),
  Honest( A ), Honest( B ), Finish( B )
  ]->
   [ St_B_5( B, id, A, kAB, X, p, s, y ), Out( mac(h(X^y), X) ) ]

  /*
  rule (modulo AC) B_4_send:
     [ St_B_4( B, id, A, kAB, X, p, s, y ) ]
    --[
    Send( B, A, mac(h(z), X) ), Running( B, A, <'I', 'R', X, z.1> ),
    Secret( B, h(z) ), Honest( A ), Honest( B ), Finish( B )
    ]->
     [ St_B_5( B, id, A, kAB, X, p, s, y ), Out( mac(h(z), X) ) ]
    variants (modulo AC)
     1. X     = X.18
        p     = p.21
        s     = s.22
        y     = one
        z     = X.18
        z.1   = map(s.22, p.21)
    
     2. X     = X.19
        p     = p.22
        s     = s.23
        y     = y.24
        z     = X.19^y.24
        z.1   = map(s.23, p.22)^y.24
    
     3. X     = z.20^inv(y.19)
        p     = p.17
        s     = s.18
        y     = y.19
        z     = z.20
        z.1   = map(s.18, p.17)^y.19
    
     4. X     = z.25^x.37
        p     = p.22
        s     = s.23
        y     = inv(x.37)
        z     = z.25
        z.1   = map(s.23, p.22)^inv(x.37)
    
     5. X     = z.26^(x.38*inv(x.39))
        p     = p.23
        s     = s.24
        y     = (x.39*inv(x.38))
        z     = z.26
        z.1   = map(s.24, p.23)^(x.39*inv(x.38))
    
     6. X     = x.36^x.37
        p     = p.22
        s     = s.23
        y     = y.24
        z     = x.36^(y.24*x.37)
        z.1   = map(s.23, p.22)^y.24
    
     7. X     = x.36^(x.37*inv(y.24))
        p     = p.22
        s     = s.23
        y     = y.24
        z     = x.36^x.37
        z.1   = map(s.23, p.22)^y.24
    
     8. X     = x.37^inv((y.25*x.39))
        p     = p.23
        s     = s.24
        y     = y.25
        z     = x.37^inv(x.39)
        z.1   = map(s.24, p.23)^y.25
    
     9. X     = x.37^(x.38*x.39)
        p     = p.23
        s     = s.24
        y     = inv(x.38)
        z     = x.37^x.39
        z.1   = map(s.24, p.23)^inv(x.38)
    
    10. X     = x.38^(x.39*x.40*inv(x.41))
        p     = p.24
        s     = s.25
        y     = (x.41*inv(x.39))
        z     = x.38^x.40
        z.1   = map(s.25, p.24)^(x.41*inv(x.39))
    
    11. X     = x.38^(x.39*inv((y.26*x.41)))
        p     = p.24
        s     = s.25
        y     = y.26
        z     = x.38^(x.39*inv(x.41))
        z.1   = map(s.25, p.24)^y.26
    
    12. X     = x.38^(x.39*inv((x.40*x.41)))
        p     = p.24
        s     = s.25
        y     = (x.40*inv(x.39))
        z     = x.38^inv(x.41)
        z.1   = map(s.25, p.24)^(x.40*inv(x.39))
    
    13. X     = x.39^(x.40*x.41*inv((x.42*x.43)))
        p     = p.25
        s     = s.26
        y     = (x.42*inv(x.40))
        z     = x.39^(x.41*inv(x.43))
        z.1   = map(s.26, p.25)^(x.42*inv(x.40))
    
    14. X     = x.41^x.42
        p     = p.27
        s     = s.28
        y     = inv((x.42*x.47))
        z     = x.41^inv(x.47)
        z.1   = map(s.28, p.27)^inv((x.42*x.47))
    
    15. X     = x.41^x.42
        p     = p.27
        s     = s.28
        y     = (x.47*inv(x.42))
        z     = x.41^x.47
        z.1   = map(s.28, p.27)^(x.47*inv(x.42))
    
    16. X     = x.41^inv(x.42)
        p     = p.27
        s     = s.28
        y     = inv(x.47)
        z     = x.41^inv((x.42*x.47))
        z.1   = map(s.28, p.27)^inv(x.47)
    
    17. X     = x.41^inv(x.42)
        p     = p.27
        s     = s.28
        y     = (x.42*x.47)
        z     = x.41^x.47
        z.1   = map(s.28, p.27)^(x.42*x.47)
    
    18. X     = x.42^x.43
        p     = p.28
        s     = s.29
        y     = (x.48*inv((x.43*x.49)))
        z     = x.42^(x.48*inv(x.49))
        z.1   = map(s.29, p.28)^(x.48*inv((x.43*x.49)))
    
    19. X     = x.42^inv(x.43)
        p     = p.28
        s     = s.29
        y     = (x.48*inv(x.49))
        z     = x.42^(x.48*inv((x.43*x.49)))
        z.1   = map(s.29, p.28)^(x.48*inv(x.49))
    
    20. X     = x.42^inv((x.43*x.44))
        p     = p.28
        s     = s.29
        y     = (x.43*x.49)
        z     = x.42^(x.49*inv(x.44))
        z.1   = map(s.29, p.28)^(x.43*x.49)
    
    21. X     = x.42^inv((x.43*x.44))
        p     = p.28
        s     = s.29
        y     = (x.43*inv(x.49))
        z     = x.42^inv((x.44*x.49))
        z.1   = map(s.29, p.28)^(x.43*inv(x.49))
    
    22. X     = x.42^(x.43*x.44)
        p     = p.28
        s     = s.29
        y     = inv((x.43*x.49))
        z     = x.42^(x.44*inv(x.49))
        z.1   = map(s.29, p.28)^inv((x.43*x.49))
    
    23. X     = x.42^(x.43*x.44)
        p     = p.28
        s     = s.29
        y     = (x.49*inv(x.43))
        z     = x.42^(x.44*x.49)
        z.1   = map(s.29, p.28)^(x.49*inv(x.43))
    
    24. X     = x.42^(x.43*inv(x.44))
        p     = p.28
        s     = s.29
        y     = inv(x.49)
        z     = x.42^(x.43*inv((x.44*x.49)))
        z.1   = map(s.29, p.28)^inv(x.49)
    
    25. X     = x.42^(x.43*inv(x.44))
        p     = p.28
        s     = s.29
        y     = inv((x.43*x.49))
        z     = x.42^inv((x.44*x.49))
        z.1   = map(s.29, p.28)^inv((x.43*x.49))
    
    26. X     = x.42^(x.43*inv(x.44))
        p     = p.28
        s     = s.29
        y     = (x.44*x.49)
        z     = x.42^(x.43*x.49)
        z.1   = map(s.29, p.28)^(x.44*x.49)
    
    27. X     = x.42^(x.43*inv(x.44))
        p     = p.28
        s     = s.29
        y     = (x.44*x.49*inv(x.43))
        z     = x.42^x.49
        z.1   = map(s.29, p.28)^(x.44*x.49*inv(x.43))
    
    28. X     = x.42^(x.43*inv(x.44))
        p     = p.28
        s     = s.29
        y     = (x.44*inv((x.43*x.49)))
        z     = x.42^inv(x.49)
        z.1   = map(s.29, p.28)^(x.44*inv((x.43*x.49)))
    
    29. X     = x.43^inv((x.44*x.45))
        p     = p.29
        s     = s.30
        y     = (x.44*x.50*inv(x.51))
        z     = x.43^(x.50*inv((x.45*x.51)))
        z.1   = map(s.30, p.29)^(x.44*x.50*inv(x.51))
    
    30. X     = x.43^(x.44*x.45)
        p     = p.29
        s     = s.30
        y     = (x.50*inv((x.44*x.51)))
        z     = x.43^(x.45*x.50*inv(x.51))
        z.1   = map(s.30, p.29)^(x.50*inv((x.44*x.51)))
    
    31. X     = x.43^(x.44*x.45*inv(x.46))
        p     = p.29
        s     = s.30
        y     = inv((x.44*x.51))
        z     = x.43^(x.45*inv((x.46*x.51)))
        z.1   = map(s.30, p.29)^inv((x.44*x.51))
    
    32. X     = x.43^(x.44*x.45*inv(x.46))
        p     = p.29
        s     = s.30
        y     = (x.46*x.51*inv(x.44))
        z     = x.43^(x.45*x.51)
        z.1   = map(s.30, p.29)^(x.46*x.51*inv(x.44))
    
    33. X     = x.43^(x.44*x.45*inv(x.46))
        p     = p.29
        s     = s.30
        y     = (x.46*inv((x.44*x.51)))
        z     = x.43^(x.45*inv(x.51))
        z.1   = map(s.30, p.29)^(x.46*inv((x.44*x.51)))
    
    34. X     = x.43^(x.44*inv(x.45))
        p     = p.29
        s     = s.30
        y     = (x.45*x.50*inv((x.44*x.51)))
        z     = x.43^(x.50*inv(x.51))
        z.1   = map(s.30, p.29)^(x.45*x.50*inv((x.44*x.51)))
    
    35. X     = x.43^(x.44*inv(x.45))
        p     = p.29
        s     = s.30
        y     = (x.50*inv(x.51))
        z     = x.43^(x.44*x.50*inv((x.45*x.51)))
        z.1   = map(s.30, p.29)^(x.50*inv(x.51))
    
    36. X     = x.43^(x.44*inv(x.45))
        p     = p.29
        s     = s.30
        y     = (x.50*inv((x.44*x.51)))
        z     = x.43^(x.50*inv((x.45*x.51)))
        z.1   = map(s.30, p.29)^(x.50*inv((x.44*x.51)))
    
    37. X     = x.43^(x.44*inv((x.45*x.46)))
        p     = p.29
        s     = s.30
        y     = (x.45*x.51)
        z     = x.43^(x.44*x.51*inv(x.46))
        z.1   = map(s.30, p.29)^(x.45*x.51)
    
    38. X     = x.43^(x.44*inv((x.45*x.46)))
        p     = p.29
        s     = s.30
        y     = (x.45*x.51*inv(x.44))
        z     = x.43^(x.51*inv(x.46))
        z.1   = map(s.30, p.29)^(x.45*x.51*inv(x.44))
    
    39. X     = x.43^(x.44*inv((x.45*x.46)))
        p     = p.29
        s     = s.30
        y     = (x.45*inv(x.51))
        z     = x.43^(x.44*inv((x.46*x.51)))
        z.1   = map(s.30, p.29)^(x.45*inv(x.51))
    
    40. X     = x.43^(x.44*inv((x.45*x.46)))
        p     = p.29
        s     = s.30
        y     = (x.45*inv((x.44*x.51)))
        z     = x.43^inv((x.46*x.51))
        z.1   = map(s.30, p.29)^(x.45*inv((x.44*x.51)))
    
    41. X     = x.44^(x.45*x.46*inv(x.47))
        p     = p.30
        s     = s.31
        y     = (x.47*x.52*inv((x.45*x.53)))
        z     = x.44^(x.46*x.52*inv(x.53))
        z.1   = map(s.31, p.30)^(x.47*x.52*inv((x.45*x.53)))
    
    42. X     = x.44^(x.45*x.46*inv(x.47))
        p     = p.30
        s     = s.31
        y     = (x.52*inv((x.45*x.53)))
        z     = x.44^(x.46*x.52*inv((x.47*x.53)))
        z.1   = map(s.31, p.30)^(x.52*inv((x.45*x.53)))
    
    43. X     = x.44^(x.45*x.46*inv((x.47*x.48)))
        p     = p.30
        s     = s.31
        y     = (x.47*x.53*inv(x.45))
        z     = x.44^(x.46*x.53*inv(x.48))
        z.1   = map(s.31, p.30)^(x.47*x.53*inv(x.45))
    
    44. X     = x.44^(x.45*x.46*inv((x.47*x.48)))
        p     = p.30
        s     = s.31
        y     = (x.47*inv((x.45*x.53)))
        z     = x.44^(x.46*inv((x.48*x.53)))
        z.1   = map(s.31, p.30)^(x.47*inv((x.45*x.53)))
    
    45. X     = x.44^(x.45*inv((x.46*x.47)))
        p     = p.30
        s     = s.31
        y     = (x.46*x.52*inv(x.53))
        z     = x.44^(x.45*x.52*inv((x.47*x.53)))
        z.1   = map(s.31, p.30)^(x.46*x.52*inv(x.53))
    
    46. X     = x.44^(x.45*inv((x.46*x.47)))
        p     = p.30
        s     = s.31
        y     = (x.46*x.52*inv((x.45*x.53)))
        z     = x.44^(x.52*inv((x.47*x.53)))
        z.1   = map(s.31, p.30)^(x.46*x.52*inv((x.45*x.53)))
    
    47. X     = x.45^(x.46*x.47*inv((x.48*x.49)))
        p     = p.31
        s     = s.32
        y     = (x.48*x.54*inv((x.46*x.55)))
        z     = x.45^(x.47*x.54*inv((x.49*x.55)))
        z.1   = map(s.32, p.31)^(x.48*x.54*inv((x.46*x.55)))
  */

rule (modulo E) A_4_receive:
   [
   St_A_4( A, id, B, kAB, p, x, s, Y ), In( mac(h(Y^x), map(s, p)^x) )
   ]
  --[
  Recv( A, B, mac(h(Y^x), map(s, p)^x) ),
  Commit( A, B, <'I', 'R', map(s, p)^x, Y> ), Secret( A, h(Y^x) ),
  Honest( A ), Honest( B ), Finish( A )
  ]->
   [ St_A_5( A, id, B, kAB, p, x, s, Y ) ]

  /*
  rule (modulo AC) A_4_receive:
     [ St_A_4( A, id, B, kAB, p, x, s, Y ), In( mac(h(z), z.1) ) ]
    --[
    Recv( A, B, mac(h(z), z.1) ), Commit( A, B, <'I', 'R', z.1, Y> ),
    Secret( A, h(z) ), Honest( A ), Honest( B ), Finish( A )
    ]->
     [ St_A_5( A, id, B, kAB, p, x, s, Y ) ]
    variants (modulo AC)
     1. Y     = Y.16
        p     = p.19
        s     = s.20
        x     = one
        z     = Y.16
        z.1   = map(s.20, p.19)
    
     2. Y     = Y.17
        p     = p.20
        s     = s.21
        x     = x.22
        z     = Y.17^x.22
        z.1   = map(s.21, p.20)^x.22
    
     3. Y     = z.18^inv(x.17)
        p     = p.15
        s     = s.16
        x     = x.17
        z     = z.18
        z.1   = map(s.16, p.15)^x.17
    
     4. Y     = z.23^x.33
        p     = p.20
        s     = s.21
        x     = inv(x.33)
        z     = z.23
        z.1   = map(s.21, p.20)^inv(x.33)
    
     5. Y     = z.24^(x.34*inv(x.35))
        p     = p.21
        s     = s.22
        x     = (x.35*inv(x.34))
        z     = z.24
        z.1   = map(s.22, p.21)^(x.35*inv(x.34))
    
     6. Y     = x.32^x.33
        p     = p.20
        s     = s.21
        x     = x.22
        z     = x.32^(x.22*x.33)
        z.1   = map(s.21, p.20)^x.22
    
     7. Y     = x.32^(x.33*inv(x.22))
        p     = p.20
        s     = s.21
        x     = x.22
        z     = x.32^x.33
        z.1   = map(s.21, p.20)^x.22
    
     8. Y     = x.33^inv((x.23*x.35))
        p     = p.21
        s     = s.22
        x     = x.23
        z     = x.33^inv(x.35)
        z.1   = map(s.22, p.21)^x.23
    
     9. Y     = x.33^(x.34*x.35)
        p     = p.21
        s     = s.22
        x     = inv(x.34)
        z     = x.33^x.35
        z.1   = map(s.22, p.21)^inv(x.34)
    
    10. Y     = x.34^(x.35*x.36*inv(x.37))
        p     = p.22
        s     = s.23
        x     = (x.37*inv(x.35))
        z     = x.34^x.36
        z.1   = map(s.23, p.22)^(x.37*inv(x.35))
    
    11. Y     = x.34^(x.35*inv((x.24*x.37)))
        p     = p.22
        s     = s.23
        x     = x.24
        z     = x.34^(x.35*inv(x.37))
        z.1   = map(s.23, p.22)^x.24
    
    12. Y     = x.34^(x.35*inv((x.36*x.37)))
        p     = p.22
        s     = s.23
        x     = (x.36*inv(x.35))
        z     = x.34^inv(x.37)
        z.1   = map(s.23, p.22)^(x.36*inv(x.35))
    
    13. Y     = x.35^(x.36*x.37*inv((x.38*x.39)))
        p     = p.23
        s     = s.24
        x     = (x.38*inv(x.36))
        z     = x.35^(x.37*inv(x.39))
        z.1   = map(s.24, p.23)^(x.38*inv(x.36))
    
    14. Y     = x.37^x.38
        p     = p.25
        s     = s.26
        x     = inv((x.38*x.43))
        z     = x.37^inv(x.43)
        z.1   = map(s.26, p.25)^inv((x.38*x.43))
    
    15. Y     = x.37^x.38
        p     = p.25
        s     = s.26
        x     = (x.43*inv(x.38))
        z     = x.37^x.43
        z.1   = map(s.26, p.25)^(x.43*inv(x.38))
    
    16. Y     = x.37^inv(x.38)
        p     = p.25
        s     = s.26
        x     = inv(x.43)
        z     = x.37^inv((x.38*x.43))
        z.1   = map(s.26, p.25)^inv(x.43)
    
    17. Y     = x.37^inv(x.38)
        p     = p.25
        s     = s.26
        x     = (x.38*x.43)
        z     = x.37^x.43
        z.1   = map(s.26, p.25)^(x.38*x.43)
    
    18. Y     = x.38^x.39
        p     = p.26
        s     = s.27
        x     = (x.44*inv((x.39*x.45)))
        z     = x.38^(x.44*inv(x.45))
        z.1   = map(s.27, p.26)^(x.44*inv((x.39*x.45)))
    
    19. Y     = x.38^inv(x.39)
        p     = p.26
        s     = s.27
        x     = (x.44*inv(x.45))
        z     = x.38^(x.44*inv((x.39*x.45)))
        z.1   = map(s.27, p.26)^(x.44*inv(x.45))
    
    20. Y     = x.38^inv((x.39*x.40))
        p     = p.26
        s     = s.27
        x     = (x.39*x.45)
        z     = x.38^(x.45*inv(x.40))
        z.1   = map(s.27, p.26)^(x.39*x.45)
    
    21. Y     = x.38^inv((x.39*x.40))
        p     = p.26
        s     = s.27
        x     = (x.39*inv(x.45))
        z     = x.38^inv((x.40*x.45))
        z.1   = map(s.27, p.26)^(x.39*inv(x.45))
    
    22. Y     = x.38^(x.39*x.40)
        p     = p.26
        s     = s.27
        x     = inv((x.39*x.45))
        z     = x.38^(x.40*inv(x.45))
        z.1   = map(s.27, p.26)^inv((x.39*x.45))
    
    23. Y     = x.38^(x.39*x.40)
        p     = p.26
        s     = s.27
        x     = (x.45*inv(x.39))
        z     = x.38^(x.40*x.45)
        z.1   = map(s.27, p.26)^(x.45*inv(x.39))
    
    24. Y     = x.38^(x.39*inv(x.40))
        p     = p.26
        s     = s.27
        x     = inv(x.45)
        z     = x.38^(x.39*inv((x.40*x.45)))
        z.1   = map(s.27, p.26)^inv(x.45)
    
    25. Y     = x.38^(x.39*inv(x.40))
        p     = p.26
        s     = s.27
        x     = inv((x.39*x.45))
        z     = x.38^inv((x.40*x.45))
        z.1   = map(s.27, p.26)^inv((x.39*x.45))
    
    26. Y     = x.38^(x.39*inv(x.40))
        p     = p.26
        s     = s.27
        x     = (x.40*x.45)
        z     = x.38^(x.39*x.45)
        z.1   = map(s.27, p.26)^(x.40*x.45)
    
    27. Y     = x.38^(x.39*inv(x.40))
        p     = p.26
        s     = s.27
        x     = (x.40*x.45*inv(x.39))
        z     = x.38^x.45
        z.1   = map(s.27, p.26)^(x.40*x.45*inv(x.39))
    
    28. Y     = x.38^(x.39*inv(x.40))
        p     = p.26
        s     = s.27
        x     = (x.40*inv((x.39*x.45)))
        z     = x.38^inv(x.45)
        z.1   = map(s.27, p.26)^(x.40*inv((x.39*x.45)))
    
    29. Y     = x.39^inv((x.40*x.41))
        p     = p.27
        s     = s.28
        x     = (x.40*x.46*inv(x.47))
        z     = x.39^(x.46*inv((x.41*x.47)))
        z.1   = map(s.28, p.27)^(x.40*x.46*inv(x.47))
    
    30. Y     = x.39^(x.40*x.41)
        p     = p.27
        s     = s.28
        x     = (x.46*inv((x.40*x.47)))
        z     = x.39^(x.41*x.46*inv(x.47))
        z.1   = map(s.28, p.27)^(x.46*inv((x.40*x.47)))
    
    31. Y     = x.39^(x.40*x.41*inv(x.42))
        p     = p.27
        s     = s.28
        x     = inv((x.40*x.47))
        z     = x.39^(x.41*inv((x.42*x.47)))
        z.1   = map(s.28, p.27)^inv((x.40*x.47))
    
    32. Y     = x.39^(x.40*x.41*inv(x.42))
        p     = p.27
        s     = s.28
        x     = (x.42*x.47*inv(x.40))
        z     = x.39^(x.41*x.47)
        z.1   = map(s.28, p.27)^(x.42*x.47*inv(x.40))
    
    33. Y     = x.39^(x.40*x.41*inv(x.42))
        p     = p.27
        s     = s.28
        x     = (x.42*inv((x.40*x.47)))
        z     = x.39^(x.41*inv(x.47))
        z.1   = map(s.28, p.27)^(x.42*inv((x.40*x.47)))
    
    34. Y     = x.39^(x.40*inv(x.41))
        p     = p.27
        s     = s.28
        x     = (x.41*x.46*inv((x.40*x.47)))
        z     = x.39^(x.46*inv(x.47))
        z.1   = map(s.28, p.27)^(x.41*x.46*inv((x.40*x.47)))
    
    35. Y     = x.39^(x.40*inv(x.41))
        p     = p.27
        s     = s.28
        x     = (x.46*inv(x.47))
        z     = x.39^(x.40*x.46*inv((x.41*x.47)))
        z.1   = map(s.28, p.27)^(x.46*inv(x.47))
    
    36. Y     = x.39^(x.40*inv(x.41))
        p     = p.27
        s     = s.28
        x     = (x.46*inv((x.40*x.47)))
        z     = x.39^(x.46*inv((x.41*x.47)))
        z.1   = map(s.28, p.27)^(x.46*inv((x.40*x.47)))
    
    37. Y     = x.39^(x.40*inv((x.41*x.42)))
        p     = p.27
        s     = s.28
        x     = (x.41*x.47)
        z     = x.39^(x.40*x.47*inv(x.42))
        z.1   = map(s.28, p.27)^(x.41*x.47)
    
    38. Y     = x.39^(x.40*inv((x.41*x.42)))
        p     = p.27
        s     = s.28
        x     = (x.41*x.47*inv(x.40))
        z     = x.39^(x.47*inv(x.42))
        z.1   = map(s.28, p.27)^(x.41*x.47*inv(x.40))
    
    39. Y     = x.39^(x.40*inv((x.41*x.42)))
        p     = p.27
        s     = s.28
        x     = (x.41*inv(x.47))
        z     = x.39^(x.40*inv((x.42*x.47)))
        z.1   = map(s.28, p.27)^(x.41*inv(x.47))
    
    40. Y     = x.39^(x.40*inv((x.41*x.42)))
        p     = p.27
        s     = s.28
        x     = (x.41*inv((x.40*x.47)))
        z     = x.39^inv((x.42*x.47))
        z.1   = map(s.28, p.27)^(x.41*inv((x.40*x.47)))
    
    41. Y     = x.40^(x.41*x.42*inv(x.43))
        p     = p.28
        s     = s.29
        x     = (x.43*x.48*inv((x.41*x.49)))
        z     = x.40^(x.42*x.48*inv(x.49))
        z.1   = map(s.29, p.28)^(x.43*x.48*inv((x.41*x.49)))
    
    42. Y     = x.40^(x.41*x.42*inv(x.43))
        p     = p.28
        s     = s.29
        x     = (x.48*inv((x.41*x.49)))
        z     = x.40^(x.42*x.48*inv((x.43*x.49)))
        z.1   = map(s.29, p.28)^(x.48*inv((x.41*x.49)))
    
    43. Y     = x.40^(x.41*x.42*inv((x.43*x.44)))
        p     = p.28
        s     = s.29
        x     = (x.43*x.49*inv(x.41))
        z     = x.40^(x.42*x.49*inv(x.44))
        z.1   = map(s.29, p.28)^(x.43*x.49*inv(x.41))
    
    44. Y     = x.40^(x.41*x.42*inv((x.43*x.44)))
        p     = p.28
        s     = s.29
        x     = (x.43*inv((x.41*x.49)))
        z     = x.40^(x.42*inv((x.44*x.49)))
        z.1   = map(s.29, p.28)^(x.43*inv((x.41*x.49)))
    
    45. Y     = x.40^(x.41*inv((x.42*x.43)))
        p     = p.28
        s     = s.29
        x     = (x.42*x.48*inv(x.49))
        z     = x.40^(x.41*x.48*inv((x.43*x.49)))
        z.1   = map(s.29, p.28)^(x.42*x.48*inv(x.49))
    
    46. Y     = x.40^(x.41*inv((x.42*x.43)))
        p     = p.28
        s     = s.29
        x     = (x.42*x.48*inv((x.41*x.49)))
        z     = x.40^(x.48*inv((x.43*x.49)))
        z.1   = map(s.29, p.28)^(x.42*x.48*inv((x.41*x.49)))
    
    47. Y     = x.41^(x.42*x.43*inv((x.44*x.45)))
        p     = p.29
        s     = s.30
        x     = (x.44*x.50*inv((x.42*x.51)))
        z     = x.41^(x.43*x.50*inv((x.45*x.51)))
        z.1   = map(s.30, p.29)^(x.44*x.50*inv((x.42*x.51)))
  */

restriction Inequality:
  "∀ x #i. (Neq( x, x ) @ #i) ⇒ (⊥)"
  // safety formula

lemma executable:
  exists-trace
  "∃ A B #i #j.
    (((((Finish( A ) @ #i) ∧ (Finish( B ) @ #j)) ∧
       (∀ Name1 Id1 Name2 Id2 #i.1 #j.1.
         ((Create_A( Name1, Id1, 'roleA' ) @ #i.1) ∧
          (Create_A( Name2, Id2, 'roleA' ) @ #j.1)) ⇒
         (#i.1 = #j.1))) ∧
      (∀ Name1 Id1 Name2 Id2 #i.1 #j.1.
        ((Create_B( Name1, Id1, 'roleB' ) @ #i.1) ∧
         (Create_B( Name2, Id2, 'roleB' ) @ #j.1)) ⇒
        (#i.1 = #j.1))) ∧
     (¬(A = B))) ∧
    (¬(∃ X #k. Rev( X ) @ #k))"
/*
guarded formula characterizing all satisfying traces:
"∃ A B #i #j.
  (Finish( A ) @ #i) ∧ (Finish( B ) @ #j)
 ∧
  (∀ Name1 Id1 Name2 Id2 #i.1 #j.1.
    (Create_A( Name1, Id1, 'roleA' ) @ #i.1) ∧
    (Create_A( Name2, Id2, 'roleA' ) @ #j.1)
   ⇒
    #i.1 = #j.1) ∧
  (∀ Name1 Id1 Name2 Id2 #i.1 #j.1.
    (Create_B( Name1, Id1, 'roleB' ) @ #i.1) ∧
    (Create_B( Name2, Id2, 'roleB' ) @ #j.1)
   ⇒
    #i.1 = #j.1) ∧
  (¬(A = B)) ∧
  (∀ X #k. (Rev( X ) @ #k) ⇒ ⊥)"
*/
simplify
solve( Finish( A ) @ #i )
  case A_4_receive
  solve( St_A_4( A, id, B, kAB, p, x, s, Y ) ▶₀ #i )
    case A_3_send
    solve( Finish( B.1 ) @ #j )
      case B_4_send
      solve( St_B_4( B.1, id.1, A.1, kAB.1, X, p.1, s.1, y ) ▶₀ #j )
        case B_3_receive
        solve( !KU( mac(h(z), map(~s, $p)^~x) ) @ #vk )
          case B_4_send
          solve( !KU( mac(h(map(~s, $p)^(~x*~y)), map(s.1, p.1)^~y)
                 ) @ #vk.2 )
            case A_3_send
            solve( !KU( senc(~s, h(~kAB.1)) ) @ #vk.7 )
              case A_1_send
              solve( !KU( map(~s, $p)^~x ) @ #vk.5 )
                case A_1_send
                solve( !KU( map(~s, $p)^~y ) @ #vk.6 )
                  case B_2_send
                  SOLVED // trace found
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma injectiveAgreementInitiator:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'I', 'R', t> ) @ #i) ⇒
    ((∃ #j.
       (Running( b, a, <'I', 'R', t> ) @ #j) ∧
       (¬(∃ a2 b2 #i2.
           (Commit( a2, b2, <'I', 'R', t> ) @ #i2) ∧ (¬(#i2 = #i))))) ∨
     (∃ X #r. Rev( X ) @ #r))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'I', 'R', t> ) @ #i)
 ∧
  (∀ #j.
    (Running( b, a, <'I', 'R', t> ) @ #j)
   ⇒
    ∃ a2 b2 #i2.
     (Commit( a2, b2, <'I', 'R', t> ) @ #i2) ∧ ¬(#i2 = #i)) ∧
  (∀ X #r. (Rev( X ) @ #r) ⇒ ⊥)"
*/
simplify
solve( Commit( a, b, <'I', 'R', t> ) @ #i )
  case A_4_receive
  solve( St_A_4( a, id, b, kAB, p, x, s, Y ) ▶₀ #i )
    case A_3_send
    solve( !KU( mac(h(z), map(~s, $p)^~x) ) @ #vk )
      case A_3_send
      solve( !KU( map(~s, $p)^~x.1 ) @ #vk.1 )
        case A_1_send_case_1
        by contradiction /* from formulas */
      next
        case A_1_send_case_2
        by solve( !KU( ~x.1 ) @ #vk.4 )
      next
        case B_2_send
        by solve( !KU( ~x.1 ) @ #vk.4 )
      next
        case c_exp
        by solve( !KU( ~x.1 ) @ #vk.4 )
      qed
    next
      case B_4_send
      solve( !KU( mac(h(map(~s, $p)^(~x*~y)), map(s.1, p.1)^~y)
             ) @ #vk.2 )
        case A_3_send
        solve( !KU( senc(~s, h(~kAB.1)) ) @ #vk.7 )
          case A_1_send
          solve( (#i2 < #i)  ∥ (#i < #i2) )
            case case_1
            solve( Commit( a2, b2, <'I', 'R', map(~s, $p)^~x, map(~s, $p)^~y>
                   ) @ #i2 )
              case A_4_receive
              solve( St_A_4( a2, id.1, b2, kAB.1, $p, ~x, ~s, map(~s, $p)^~y
                     ) ▶₀ #i2 )
                case A_3_send
                by contradiction /* cyclic */
              qed
            qed
          next
            case case_2
            solve( Commit( a2, b2, <'I', 'R', map(~s, $p)^~x, map(~s, $p)^~y>
                   ) @ #i2 )
              case A_4_receive
              solve( St_A_4( a2, id.1, b2, kAB.1, $p, ~x, ~s, map(~s, $p)^~y
                     ) ▶₀ #i2 )
                case A_3_send
                by contradiction /* cyclic */
              qed
            qed
          qed
        next
          case c_senc
          solve( !KU( ~s ) @ #vk.8 )
            case A_1_send
            solve( !KU( ~kAB ) @ #vk.11 )
              case Reveal_shk_A
              by contradiction /* from formulas */
            next
              case Reveal_shk_B
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case c_mac
        solve( !KU( h(map(~s, $p)^(~x*~y)) ) @ #vk.8 )
          case c_h
          solve( !KU( map(~s, $p)^(~x*~y) ) @ #vk.10 )
            case A_1_send_case_1
            by solve( !KU( ~y ) @ #vk.11 )
          next
            case A_1_send_case_2
            by solve( !KU( ~x ) @ #vk.14 )
          next
            case B_2_send_case_1
            by solve( !KU( ~x ) @ #vk.10 )
          next
            case B_2_send_case_2
            by solve( !KU( ~y.1 ) @ #vk.14 )
          next
            case c_exp
            by solve( !KU( ~x ) @ #vk.13 )
          qed
        qed
      qed
    next
      case c_mac
      solve( splitEqs(0) )
        case split_case_1
        solve( !KU( h(Y^~x) ) @ #vk.2 )
          case c_h
          solve( !KU( Y^~x ) @ #vk.4 )
            case A_1_send_case_1
            solve( !KU( map(~s, $p) ) @ #vk.3 )
              case A_1_send
              by solve( !KU( ~x ) @ #vk.5 )
            next
              case B_2_send
              by solve( !KU( ~y ) @ #vk.5 )
            next
              case c_map
              solve( !KU( ~s ) @ #vk.4 )
                case A_1_send
                solve( !KU( ~kAB ) @ #vk.7 )
                  case Reveal_shk_A
                  by contradiction /* from formulas */
                next
                  case Reveal_shk_B
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case A_1_send_case_2
            by solve( !KU( ~x ) @ #vk.6 )
          next
            case B_2_send
            by solve( !KU( ~x ) @ #vk.6 )
          next
            case c_exp
            by solve( !KU( ~x ) @ #vk.5 )
          qed
        qed
      next
        case split_case_2
        solve( !KU( z^inv(~x) ) @ #vk.1 )
          case A_1_send_case_1
          by solve( !KU( ~x.1 ) @ #vk.6 )
        next
          case A_1_send_case_2
          by solve( !KU( ~x.1 ) @ #vk.7 )
        next
          case B_2_send_case_1
          by solve( !KU( ~y ) @ #vk.6 )
        next
          case B_2_send_case_2
          by solve( !KU( ~y ) @ #vk.7 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.6 )
        qed
      next
        case split_case_3
        solve( !KU( h(x.1^(~x*x.2)) ) @ #vk.2 )
          case c_h
          solve( !KU( x.1^(~x*x.2) ) @ #vk.4 )
            case A_1_send_case_1
            by solve( !KU( ~x ) @ #vk.5 )
          next
            case A_1_send_case_2
            solve( !KU( map(~s, $p)^x.1 ) @ #vk.3 )
              case A_1_send_case_1
              by contradiction /* from formulas */
            next
              case A_1_send_case_2
              by solve( !KU( ~x ) @ #vk.7 )
            next
              case A_1_send_case_3
              by solve( !KU( ~x ) @ #vk.8 )
            next
              case A_1_send_case_4
              by solve( !KU( ~x ) @ #vk.8 )
            next
              case A_1_send_case_5
              by solve( !KU( ~x ) @ #vk.10 )
            next
              case B_2_send_case_1
              by solve( !KU( ~y ) @ #vk.5 )
            next
              case B_2_send_case_2
              by solve( !KU( ~y ) @ #vk.12 )
            next
              case B_2_send_case_3
              by solve( !KU( ~y ) @ #vk.8 )
            next
              case B_2_send_case_4
              by solve( !KU( ~y ) @ #vk.8 )
            next
              case B_2_send_case_5
              by solve( !KU( ~y ) @ #vk.10 )
            next
              case c_exp
              solve( !KU( map(~s, $p) ) @ #vk.6 )
                case A_1_send
                by solve( !KU( ~x ) @ #vk.8 )
              next
                case B_2_send
                by solve( !KU( ~y ) @ #vk.8 )
              next
                case c_map
                solve( !KU( ~s ) @ #vk.7 )
                  case A_1_send
                  solve( !KU( ~kAB ) @ #vk.10 )
                    case Reveal_shk_A
                    by contradiction /* from formulas */
                  next
                    case Reveal_shk_B
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          next
            case A_1_send_case_3
            by solve( !KU( ~x ) @ #vk.6 )
          next
            case A_1_send_case_4
            by solve( !KU( ~x.2 ) @ #vk.8 )
          next
            case A_1_send_case_5
            by solve( !KU( ~x ) @ #vk.6 )
          next
            case A_1_send_case_6
            by solve( !KU( ~x.3 ) @ #vk.9 )
          next
            case B_2_send_case_1
            by solve( !KU( ~x ) @ #vk.5 )
          next
            case B_2_send_case_2
            by solve( !KU( ~x ) @ #vk.11 )
          next
            case B_2_send_case_3
            by solve( !KU( ~y ) @ #vk.8 )
          next
            case B_2_send_case_4
            by solve( !KU( ~x ) @ #vk.6 )
          next
            case B_2_send_case_5
            by solve( !KU( ~y ) @ #vk.9 )
          next
            case c_exp
            by solve( !KU( ~x ) @ #vk.7 )
          qed
        qed
      next
        case split_case_4
        solve( !KU( x.1^(x.2*inv(~x)) ) @ #vk.1 )
          case A_1_send_case_1
          by solve( !KU( ~x ) @ #vk.5 )
        next
          case A_1_send_case_2
          by solve( !KU( ~x ) @ #vk.7 )
        next
          case A_1_send_case_3
          by solve( !KU( ~x.2 ) @ #vk.7 )
        next
          case A_1_send_case_4
          by solve( !KU( ~x.2 ) @ #vk.8 )
        next
          case B_2_send_case_1
          by solve( !KU( ~x ) @ #vk.10 )
        next
          case B_2_send_case_2
          by solve( !KU( ~x ) @ #vk.12 )
        next
          case B_2_send_case_3
          by solve( !KU( ~y ) @ #vk.7 )
        next
          case B_2_send_case_4
          by solve( !KU( ~y ) @ #vk.8 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.8 )
        qed
      next
        case split_case_5
        solve( !KU( x.1^inv((~x*x.2)) ) @ #vk.1 )
          case A_1_send_case_1
          by solve( !KU( ~x.2 ) @ #vk.6 )
        next
          case A_1_send_case_2
          by solve( !KU( ~x.2 ) @ #vk.7 )
        next
          case B_2_send_case_1
          by solve( !KU( ~y ) @ #vk.6 )
        next
          case B_2_send_case_2
          by solve( !KU( ~y ) @ #vk.7 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.7 )
        qed
      next
        case split_case_6
        solve( !KU( x.1^(x.2*inv((~x*x.3))) ) @ #vk.1 )
          case A_1_send_case_1
          by solve( !KU( ~x ) @ #vk.6 )
        next
          case A_1_send_case_2
          by solve( !KU( ~x ) @ #vk.8 )
        next
          case A_1_send_case_3
          by solve( !KU( ~x.3 ) @ #vk.7 )
        next
          case A_1_send_case_4
          by solve( !KU( ~x.3 ) @ #vk.8 )
        next
          case B_2_send_case_1
          by solve( !KU( ~x ) @ #vk.11 )
        next
          case B_2_send_case_2
          by solve( !KU( ~x ) @ #vk.13 )
        next
          case B_2_send_case_3
          by solve( !KU( ~y ) @ #vk.7 )
        next
          case B_2_send_case_4
          by solve( !KU( ~y ) @ #vk.8 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.9 )
        qed
      qed
    qed
  qed
qed

lemma injectiveAgreementResponder:
  all-traces
  "∀ a b t #i.
    (Commit( a, b, <'R', 'I', t> ) @ #i) ⇒
    ((∃ #j.
       (Running( b, a, <'R', 'I', t> ) @ #j) ∧
       (¬(∃ a2 b2 #i2.
           (Commit( a2, b2, <'R', 'I', t> ) @ #i2) ∧ (¬(#i2 = #i))))) ∨
     (∃ X #r. Rev( X ) @ #r))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'R', 'I', t> ) @ #i)
 ∧
  (∀ #j.
    (Running( b, a, <'R', 'I', t> ) @ #j)
   ⇒
    ∃ a2 b2 #i2.
     (Commit( a2, b2, <'R', 'I', t> ) @ #i2) ∧ ¬(#i2 = #i)) ∧
  (∀ X #r. (Rev( X ) @ #r) ⇒ ⊥)"
*/
simplify
solve( Commit( a, b, <'R', 'I', t> ) @ #i )
  case B_3_receive
  solve( St_B_3( a, id, b, kAB, X, p, s, y ) ▶₀ #i )
    case B_2_send
    solve( !KU( mac(h(z), map(s, p)^~y) ) @ #vk )
      case A_3_send
      solve( !KU( senc(s, h(~kAB)) ) @ #vk.5 )
        case A_1_send
        solve( !KU( map(~s, p)^~x ) @ #vk.3 )
          case A_1_send_case_1
          solve( (#i2 < #i)  ∥ (#i < #i2) )
            case case_1
            solve( Commit( a2, b2, <'R', 'I', map(~s, $p)^~x, map(~s, $p)^~y>
                   ) @ #i2 )
              case B_3_receive
              solve( St_B_3( a2, id.1, b2, kAB.1, map(~s, $p)^~x, $p, ~s, ~y
                     ) ▶₀ #i2 )
                case B_2_send
                by contradiction /* cyclic */
              qed
            qed
          next
            case case_2
            solve( Commit( a2, b2, <'R', 'I', map(~s, $p)^~x, map(~s, $p)^~y>
                   ) @ #i2 )
              case B_3_receive
              solve( St_B_3( a2, id.1, b2, kAB.1, map(~s, $p)^~x, $p, ~s, ~y
                     ) ▶₀ #i2 )
                case B_2_send
                by contradiction /* cyclic */
              qed
            qed
          qed
        next
          case A_1_send_case_2
          by solve( !KU( ~x ) @ #vk.8 )
        next
          case B_2_send
          by solve( !KU( ~x ) @ #vk.9 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.8 )
        qed
      next
        case c_senc
        solve( !KU( h(~kAB) ) @ #vk.8 )
          case c_h
          solve( !KU( ~kAB ) @ #vk.9 )
            case Reveal_shk_A
            by contradiction /* from formulas */
          next
            case Reveal_shk_B
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case B_4_send
      solve( !KU( senc(s, h(~kAB)) ) @ #vk.5 )
        case A_1_send
        solve( !KU( mac(h(map(~s, p)^(~y*~y.1)), map(s.1, p.1)^~y)
               ) @ #vk.6 )
          case B_4_send
          by contradiction /* cyclic */
        next
          case c_mac
          solve( !KU( h(map(~s, p)^(~y*~y.1)) ) @ #vk.12 )
            case c_h
            solve( !KU( map(~s, p)^(~y*~y.1) ) @ #vk.14 )
              case A_1_send
              by solve( !KU( ~x ) @ #vk.18 )
            next
              case B_2_send_case_1
              by solve( !KU( ~y ) @ #vk.15 )
            next
              case B_2_send_case_2
              by solve( !KU( ~y.1 ) @ #vk.13 )
            next
              case B_2_send_case_3
              by solve( !KU( ~y.2 ) @ #vk.19 )
            next
              case c_exp
              by solve( !KU( ~y ) @ #vk.17 )
            qed
          qed
        qed
      next
        case c_senc
        solve( !KU( h(~kAB) ) @ #vk.13 )
          case c_h
          solve( !KU( ~kAB ) @ #vk.14 )
            case Reveal_shk_A
            by contradiction /* from formulas */
          next
            case Reveal_shk_B
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case c_mac
      solve( !KU( senc(s, h(~kAB)) ) @ #vk.5 )
        case A_1_send
        solve( splitEqs(0) )
          case split_case_1
          solve( !KU( h(X^~y) ) @ #vk.6 )
            case c_h
            solve( !KU( X^~y ) @ #vk.8 )
              case A_1_send
              by solve( !KU( ~y ) @ #vk.10 )
            next
              case B_2_send_case_1
              solve( !KU( map(~s, p) ) @ #vk.6 )
                case A_1_send
                by solve( !KU( ~x ) @ #vk.9 )
              next
                case B_2_send
                by solve( !KU( ~y.1 ) @ #vk.10 )
              next
                case c_map
                solve( !KU( ~s ) @ #vk.8 )
                  case A_1_send
                  solve( !KU( ~kAB ) @ #vk.10 )
                    case Reveal_shk_A
                    by contradiction /* from formulas */
                  next
                    case Reveal_shk_B
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case B_2_send_case_2
              by solve( !KU( ~y ) @ #vk.10 )
            next
              case c_exp
              by solve( !KU( ~y ) @ #vk.9 )
            qed
          qed
        next
          case split_case_2
          solve( !KU( z^inv(~y) ) @ #vk.4 )
            case A_1_send_case_1
            by solve( !KU( ~x.1 ) @ #vk.10 )
          next
            case A_1_send_case_2
            by solve( !KU( ~x.1 ) @ #vk.11 )
          next
            case B_2_send_case_1
            by solve( !KU( ~y.1 ) @ #vk.10 )
          next
            case B_2_send_case_2
            by solve( !KU( ~y.1 ) @ #vk.11 )
          next
            case c_exp
            by solve( !KU( ~y ) @ #vk.10 )
          qed
        next
          case split_case_3
          solve( !KU( h(x^(~y*x.1)) ) @ #vk.6 )
            case c_h
            solve( !KU( x^(~y*x.1) ) @ #vk.8 )
              case A_1_send_case_1
              by solve( !KU( ~y ) @ #vk.9 )
            next
              case A_1_send_case_2
              by solve( !KU( ~y ) @ #vk.10 )
            next
              case A_1_send_case_3
              by solve( !KU( ~x.2 ) @ #vk.12 )
            next
              case A_1_send_case_4
              by solve( !KU( ~y ) @ #vk.10 )
            next
              case A_1_send_case_5
              by solve( !KU( ~x.3 ) @ #vk.13 )
            next
              case B_2_send_case_1
              by solve( !KU( ~y ) @ #vk.9 )
            next
              case B_2_send_case_2
              solve( !KU( map(~s, p)^x ) @ #vk.6 )
                case A_1_send_case_1
                by solve( !KU( ~x ) @ #vk.9 )
              next
                case A_1_send_case_2
                by solve( !KU( ~x ) @ #vk.11 )
              next
                case A_1_send_case_3
                by solve( !KU( ~x.1 ) @ #vk.12 )
              next
                case A_1_send_case_4
                by solve( !KU( ~x.1 ) @ #vk.12 )
              next
                case A_1_send_case_5
                by solve( !KU( ~x.2 ) @ #vk.14 )
              next
                case B_2_send_case_1
                by solve( !KU( ~y ) @ #vk.10 )
              next
                case B_2_send_case_2
                by solve( !KU( ~y ) @ #vk.15 )
              next
                case B_2_send_case_3
                by solve( !KU( ~y.1 ) @ #vk.13 )
              next
                case B_2_send_case_4
                by solve( !KU( ~y.1 ) @ #vk.13 )
              next
                case B_2_send_case_5
                by solve( !KU( ~y.1 ) @ #vk.15 )
              next
                case c_exp
                solve( !KU( map(~s, p) ) @ #vk.10 )
                  case A_1_send
                  by solve( !KU( ~x.1 ) @ #vk.12 )
                next
                  case B_2_send
                  by solve( !KU( ~y.1 ) @ #vk.13 )
                next
                  case c_map
                  solve( !KU( ~s ) @ #vk.11 )
                    case A_1_send
                    solve( !KU( ~kAB ) @ #vk.13 )
                      case Reveal_shk_A
                      by contradiction /* from formulas */
                    next
                      case Reveal_shk_B
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case B_2_send_case_3
              by solve( !KU( ~y.1 ) @ #vk.15 )
            next
              case B_2_send_case_4
              by solve( !KU( ~y.1 ) @ #vk.12 )
            next
              case B_2_send_case_5
              by solve( !KU( ~y ) @ #vk.10 )
            next
              case B_2_send_case_6
              by solve( !KU( ~y.1 ) @ #vk.13 )
            next
              case c_exp
              by solve( !KU( ~y ) @ #vk.11 )
            qed
          qed
        next
          case split_case_4
          solve( !KU( x^(x.1*inv(~y)) ) @ #vk.4 )
            case A_1_send_case_1
            by solve( !KU( ~y ) @ #vk.9 )
          next
            case A_1_send_case_2
            by solve( !KU( ~y ) @ #vk.11 )
          next
            case A_1_send_case_3
            by solve( !KU( ~x.2 ) @ #vk.11 )
          next
            case A_1_send_case_4
            by solve( !KU( ~x.2 ) @ #vk.12 )
          next
            case B_2_send_case_1
            by solve( !KU( ~y ) @ #vk.14 )
          next
            case B_2_send_case_2
            by solve( !KU( ~y.1 ) @ #vk.16 )
          next
            case B_2_send_case_3
            by solve( !KU( ~y.1 ) @ #vk.11 )
          next
            case B_2_send_case_4
            by solve( !KU( ~y.1 ) @ #vk.12 )
          next
            case c_exp
            by solve( !KU( ~y ) @ #vk.12 )
          qed
        next
          case split_case_5
          solve( !KU( x^inv((~y*x.1)) ) @ #vk.4 )
            case A_1_send_case_1
            by solve( !KU( ~x.2 ) @ #vk.10 )
          next
            case A_1_send_case_2
            by solve( !KU( ~x.2 ) @ #vk.11 )
          next
            case B_2_send_case_1
            by solve( !KU( ~y.1 ) @ #vk.10 )
          next
            case B_2_send_case_2
            by solve( !KU( ~y.1 ) @ #vk.11 )
          next
            case c_exp
            by solve( !KU( ~y ) @ #vk.11 )
          qed
        next
          case split_case_6
          solve( !KU( x^(x.1*inv((~y*x.2))) ) @ #vk.4 )
            case A_1_send_case_1
            by solve( !KU( ~y ) @ #vk.10 )
          next
            case A_1_send_case_2
            by solve( !KU( ~y ) @ #vk.12 )
          next
            case A_1_send_case_3
            by solve( !KU( ~x.3 ) @ #vk.11 )
          next
            case A_1_send_case_4
            by solve( !KU( ~x.3 ) @ #vk.12 )
          next
            case B_2_send_case_1
            by solve( !KU( ~y ) @ #vk.15 )
          next
            case B_2_send_case_2
            by solve( !KU( ~y.1 ) @ #vk.17 )
          next
            case B_2_send_case_3
            by solve( !KU( ~y.1 ) @ #vk.11 )
          next
            case B_2_send_case_4
            by solve( !KU( ~y.1 ) @ #vk.12 )
          next
            case c_exp
            by solve( !KU( ~y ) @ #vk.13 )
          qed
        qed
      next
        case c_senc
        solve( !KU( h(~kAB) ) @ #vk.9 )
          case c_h
          solve( !KU( ~kAB ) @ #vk.10 )
            case Reveal_shk_A
            by contradiction /* from formulas */
          next
            case Reveal_shk_B
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  qed
qed

lemma secrecy:
  all-traces
  "∀ A x #i.
    (Secret( A, x ) @ #i) ⇒
    ((¬(∃ #j. K( x ) @ #j)) ∨
     (∃ X #r. (Rev( X ) @ #r) ∧ (Honest( X ) @ #i)))"
/*
guarded formula characterizing all counter-examples:
"∃ A x #i.
  (Secret( A, x ) @ #i)
 ∧
  (∃ #j. (K( x ) @ #j)) ∧
  (∀ X #r. (Rev( X ) @ #r) ∧ (Honest( X ) @ #i) ⇒ ⊥)"
*/
simplify
solve( Secret( A, x ) @ #i )
  case A_4_receive
  solve( St_A_4( A, id, B, kAB, p, x, s, Y ) ▶₀ #i )
    case A_3_send
    solve( !KU( mac(h(z), map(~s, $p)^~x) ) @ #vk.1 )
      case A_3_send
      solve( !KU( h(map(~s, $p)^(~x*~x.1)) ) @ #vk.1 )
        case c_h
        solve( !KU( map(~s, $p)^(~x*~x.1) ) @ #vk.4 )
          case A_1_send_case_1
          by contradiction /* from formulas */
        next
          case A_1_send_case_2
          by solve( !KU( ~x.1 ) @ #vk.5 )
        next
          case A_1_send_case_3
          by solve( !KU( ~x ) @ #vk.8 )
        next
          case B_2_send
          by solve( !KU( ~y ) @ #vk.8 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.7 )
        qed
      qed
    next
      case B_4_send
      solve( !KU( h(map(~s, $p)^(~x*~y)) ) @ #vk.1 )
        case c_h
        solve( !KU( map(~s, $p)^(~x*~y) ) @ #vk.9 )
          case A_1_send_case_1
          by solve( !KU( ~y ) @ #vk.10 )
        next
          case A_1_send_case_2
          by solve( !KU( ~x ) @ #vk.13 )
        next
          case B_2_send_case_1
          by solve( !KU( ~x ) @ #vk.10 )
        next
          case B_2_send_case_2
          by solve( !KU( ~y.1 ) @ #vk.13 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.12 )
        qed
      qed
    next
      case c_mac
      solve( splitEqs(0) )
        case split_case_1
        solve( !KU( h(Y^~x) ) @ #vk.1 )
          case c_h
          solve( !KU( Y^~x ) @ #vk.4 )
            case A_1_send_case_1
            solve( !KU( map(~s, $p) ) @ #vk.3 )
              case A_1_send
              by solve( !KU( ~x ) @ #vk.5 )
            next
              case B_2_send
              by solve( !KU( ~y ) @ #vk.5 )
            next
              case c_map
              solve( !KU( ~s ) @ #vk.4 )
                case A_1_send
                solve( !KU( ~kAB ) @ #vk.7 )
                  case Reveal_shk_A
                  by contradiction /* from formulas */
                next
                  case Reveal_shk_B
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case A_1_send_case_2
            by solve( !KU( ~x ) @ #vk.6 )
          next
            case B_2_send
            by solve( !KU( ~x ) @ #vk.6 )
          next
            case c_exp
            by solve( !KU( ~x ) @ #vk.5 )
          qed
        qed
      next
        case split_case_2
        solve( !KU( z^inv(~x) ) @ #vk.2 )
          case A_1_send_case_1
          by solve( !KU( ~x.1 ) @ #vk.6 )
        next
          case A_1_send_case_2
          by solve( !KU( ~x.1 ) @ #vk.7 )
        next
          case B_2_send_case_1
          by solve( !KU( ~y ) @ #vk.6 )
        next
          case B_2_send_case_2
          by solve( !KU( ~y ) @ #vk.7 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.6 )
        qed
      next
        case split_case_3
        solve( !KU( h(x.1^(~x*x.2)) ) @ #vk.1 )
          case c_h
          solve( !KU( x.1^(~x*x.2) ) @ #vk.4 )
            case A_1_send_case_1
            by solve( !KU( ~x ) @ #vk.5 )
          next
            case A_1_send_case_2
            solve( !KU( map(~s, $p)^x.1 ) @ #vk.3 )
              case A_1_send_case_1
              by contradiction /* from formulas */
            next
              case A_1_send_case_2
              by solve( !KU( ~x ) @ #vk.7 )
            next
              case A_1_send_case_3
              by solve( !KU( ~x ) @ #vk.8 )
            next
              case A_1_send_case_4
              by solve( !KU( ~x ) @ #vk.8 )
            next
              case A_1_send_case_5
              by solve( !KU( ~x ) @ #vk.10 )
            next
              case B_2_send_case_1
              by solve( !KU( ~y ) @ #vk.5 )
            next
              case B_2_send_case_2
              by solve( !KU( ~y ) @ #vk.12 )
            next
              case B_2_send_case_3
              by solve( !KU( ~y ) @ #vk.8 )
            next
              case B_2_send_case_4
              by solve( !KU( ~y ) @ #vk.8 )
            next
              case B_2_send_case_5
              by solve( !KU( ~y ) @ #vk.10 )
            next
              case c_exp
              solve( !KU( map(~s, $p) ) @ #vk.6 )
                case A_1_send
                by solve( !KU( ~x ) @ #vk.8 )
              next
                case B_2_send
                by solve( !KU( ~y ) @ #vk.8 )
              next
                case c_map
                solve( !KU( ~s ) @ #vk.7 )
                  case A_1_send
                  solve( !KU( ~kAB ) @ #vk.10 )
                    case Reveal_shk_A
                    by contradiction /* from formulas */
                  next
                    case Reveal_shk_B
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          next
            case A_1_send_case_3
            by solve( !KU( ~x ) @ #vk.6 )
          next
            case A_1_send_case_4
            by solve( !KU( ~x.2 ) @ #vk.8 )
          next
            case A_1_send_case_5
            by solve( !KU( ~x ) @ #vk.6 )
          next
            case A_1_send_case_6
            by solve( !KU( ~x.3 ) @ #vk.9 )
          next
            case B_2_send_case_1
            by solve( !KU( ~x ) @ #vk.5 )
          next
            case B_2_send_case_2
            by solve( !KU( ~x ) @ #vk.11 )
          next
            case B_2_send_case_3
            by solve( !KU( ~y ) @ #vk.8 )
          next
            case B_2_send_case_4
            by solve( !KU( ~x ) @ #vk.6 )
          next
            case B_2_send_case_5
            by solve( !KU( ~y ) @ #vk.9 )
          next
            case c_exp
            by solve( !KU( ~x ) @ #vk.7 )
          qed
        qed
      next
        case split_case_4
        solve( !KU( x.1^(x.2*inv(~x)) ) @ #vk.2 )
          case A_1_send_case_1
          by solve( !KU( ~x ) @ #vk.5 )
        next
          case A_1_send_case_2
          by solve( !KU( ~x ) @ #vk.7 )
        next
          case A_1_send_case_3
          by solve( !KU( ~x.2 ) @ #vk.7 )
        next
          case A_1_send_case_4
          by solve( !KU( ~x.2 ) @ #vk.8 )
        next
          case B_2_send_case_1
          by solve( !KU( ~x ) @ #vk.10 )
        next
          case B_2_send_case_2
          by solve( !KU( ~x ) @ #vk.12 )
        next
          case B_2_send_case_3
          by solve( !KU( ~y ) @ #vk.7 )
        next
          case B_2_send_case_4
          by solve( !KU( ~y ) @ #vk.8 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.8 )
        qed
      next
        case split_case_5
        solve( !KU( x.1^inv((~x*x.2)) ) @ #vk.2 )
          case A_1_send_case_1
          by solve( !KU( ~x.2 ) @ #vk.6 )
        next
          case A_1_send_case_2
          by solve( !KU( ~x.2 ) @ #vk.7 )
        next
          case B_2_send_case_1
          by solve( !KU( ~y ) @ #vk.6 )
        next
          case B_2_send_case_2
          by solve( !KU( ~y ) @ #vk.7 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.7 )
        qed
      next
        case split_case_6
        solve( !KU( x.1^(x.2*inv((~x*x.3))) ) @ #vk.2 )
          case A_1_send_case_1
          by solve( !KU( ~x ) @ #vk.6 )
        next
          case A_1_send_case_2
          by solve( !KU( ~x ) @ #vk.8 )
        next
          case A_1_send_case_3
          by solve( !KU( ~x.3 ) @ #vk.7 )
        next
          case A_1_send_case_4
          by solve( !KU( ~x.3 ) @ #vk.8 )
        next
          case B_2_send_case_1
          by solve( !KU( ~x ) @ #vk.11 )
        next
          case B_2_send_case_2
          by solve( !KU( ~x ) @ #vk.13 )
        next
          case B_2_send_case_3
          by solve( !KU( ~y ) @ #vk.7 )
        next
          case B_2_send_case_4
          by solve( !KU( ~y ) @ #vk.8 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.9 )
        qed
      qed
    qed
  qed
next
  case B_4_send
  solve( St_B_4( A, id, A.1, kAB, X, p, s, y ) ▶₀ #i )
    case B_3_receive
    solve( !KU( mac(h(z.1), map(s, p)^~y) ) @ #vk.1 )
      case A_3_send
      solve( !KU( h(map(s, p)^(~x*~y)) ) @ #vk.1 )
        case c_h
        solve( !KU( map(s, p)^(~x*~y) ) @ #vk.8 )
          case A_1_send_case_1
          by solve( !KU( ~y ) @ #vk.9 )
        next
          case A_1_send_case_2
          by solve( !KU( ~x.1 ) @ #vk.12 )
        next
          case B_2_send_case_1
          by solve( !KU( ~x ) @ #vk.9 )
        next
          case B_2_send_case_2
          by solve( !KU( ~y.1 ) @ #vk.13 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.11 )
        qed
      qed
    next
      case B_4_send
      solve( !KU( h(map(s, p)^(~y*~y.1)) ) @ #vk.1 )
        case c_h
        solve( !KU( map(s, p)^(~y*~y.1) ) @ #vk.13 )
          case A_1_send
          by solve( !KU( ~x ) @ #vk.17 )
        next
          case B_2_send_case_1
          by solve( !KU( ~y ) @ #vk.14 )
        next
          case B_2_send_case_2
          by solve( !KU( ~y.1 ) @ #vk.13 )
        next
          case B_2_send_case_3
          by solve( !KU( ~y.2 ) @ #vk.18 )
        next
          case c_exp
          by solve( !KU( ~y ) @ #vk.16 )
        qed
      qed
    next
      case c_mac
      solve( !KU( senc(s, h(~kAB)) ) @ #vk.6 )
        case A_1_send
        solve( splitEqs(0) )
          case split_case_1
          solve( !KU( h(X^~y) ) @ #vk.3 )
            case c_h
            solve( !KU( X^~y ) @ #vk.8 )
              case A_1_send
              by solve( !KU( ~y ) @ #vk.10 )
            next
              case B_2_send_case_1
              solve( !KU( map(~s, p) ) @ #vk.6 )
                case A_1_send
                by solve( !KU( ~x ) @ #vk.9 )
              next
                case B_2_send
                by solve( !KU( ~y.1 ) @ #vk.10 )
              next
                case c_map
                solve( !KU( ~s ) @ #vk.8 )
                  case A_1_send
                  solve( !KU( ~kAB ) @ #vk.10 )
                    case Reveal_shk_A
                    by contradiction /* from formulas */
                  next
                    case Reveal_shk_B
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case B_2_send_case_2
              by solve( !KU( ~y ) @ #vk.10 )
            next
              case c_exp
              by solve( !KU( ~y ) @ #vk.9 )
            qed
          qed
        next
          case split_case_2
          solve( !KU( z^inv(~y) ) @ #vk.5 )
            case A_1_send_case_1
            by solve( !KU( ~x.1 ) @ #vk.10 )
          next
            case A_1_send_case_2
            by solve( !KU( ~x.1 ) @ #vk.11 )
          next
            case B_2_send_case_1
            by solve( !KU( ~y.1 ) @ #vk.10 )
          next
            case B_2_send_case_2
            by solve( !KU( ~y.1 ) @ #vk.11 )
          next
            case c_exp
            by solve( !KU( ~y ) @ #vk.10 )
          qed
        next
          case split_case_3
          solve( !KU( h(x^(~y*x.1)) ) @ #vk.3 )
            case c_h
            solve( !KU( x^(~y*x.1) ) @ #vk.8 )
              case A_1_send_case_1
              by solve( !KU( ~y ) @ #vk.9 )
            next
              case A_1_send_case_2
              by solve( !KU( ~y ) @ #vk.10 )
            next
              case A_1_send_case_3
              by solve( !KU( ~x.2 ) @ #vk.12 )
            next
              case A_1_send_case_4
              by solve( !KU( ~y ) @ #vk.10 )
            next
              case A_1_send_case_5
              by solve( !KU( ~x.3 ) @ #vk.13 )
            next
              case B_2_send_case_1
              by solve( !KU( ~y ) @ #vk.9 )
            next
              case B_2_send_case_2
              solve( !KU( map(~s, p)^x ) @ #vk.6 )
                case A_1_send_case_1
                by solve( !KU( ~x ) @ #vk.9 )
              next
                case A_1_send_case_2
                by solve( !KU( ~x ) @ #vk.11 )
              next
                case A_1_send_case_3
                by solve( !KU( ~x.1 ) @ #vk.12 )
              next
                case A_1_send_case_4
                by solve( !KU( ~x.1 ) @ #vk.12 )
              next
                case A_1_send_case_5
                by solve( !KU( ~x.2 ) @ #vk.14 )
              next
                case B_2_send_case_1
                by solve( !KU( ~y ) @ #vk.10 )
              next
                case B_2_send_case_2
                by solve( !KU( ~y ) @ #vk.15 )
              next
                case B_2_send_case_3
                by solve( !KU( ~y.1 ) @ #vk.13 )
              next
                case B_2_send_case_4
                by solve( !KU( ~y.1 ) @ #vk.13 )
              next
                case B_2_send_case_5
                by solve( !KU( ~y.1 ) @ #vk.15 )
              next
                case c_exp
                solve( !KU( map(~s, p) ) @ #vk.10 )
                  case A_1_send
                  by solve( !KU( ~x.1 ) @ #vk.12 )
                next
                  case B_2_send
                  by solve( !KU( ~y.1 ) @ #vk.13 )
                next
                  case c_map
                  solve( !KU( ~s ) @ #vk.11 )
                    case A_1_send
                    solve( !KU( ~kAB ) @ #vk.13 )
                      case Reveal_shk_A
                      by contradiction /* from formulas */
                    next
                      case Reveal_shk_B
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case B_2_send_case_3
              by solve( !KU( ~y.1 ) @ #vk.15 )
            next
              case B_2_send_case_4
              by solve( !KU( ~y.1 ) @ #vk.12 )
            next
              case B_2_send_case_5
              by solve( !KU( ~y ) @ #vk.10 )
            next
              case B_2_send_case_6
              by solve( !KU( ~y.1 ) @ #vk.13 )
            next
              case c_exp
              by solve( !KU( ~y ) @ #vk.11 )
            qed
          qed
        next
          case split_case_4
          solve( !KU( x^(x.1*inv(~y)) ) @ #vk.5 )
            case A_1_send_case_1
            by solve( !KU( ~y ) @ #vk.9 )
          next
            case A_1_send_case_2
            by solve( !KU( ~y ) @ #vk.11 )
          next
            case A_1_send_case_3
            by solve( !KU( ~x.2 ) @ #vk.11 )
          next
            case A_1_send_case_4
            by solve( !KU( ~x.2 ) @ #vk.12 )
          next
            case B_2_send_case_1
            by solve( !KU( ~y ) @ #vk.14 )
          next
            case B_2_send_case_2
            by solve( !KU( ~y.1 ) @ #vk.16 )
          next
            case B_2_send_case_3
            by solve( !KU( ~y.1 ) @ #vk.11 )
          next
            case B_2_send_case_4
            by solve( !KU( ~y.1 ) @ #vk.12 )
          next
            case c_exp
            by solve( !KU( ~y ) @ #vk.12 )
          qed
        next
          case split_case_5
          solve( !KU( x^inv((~y*x.1)) ) @ #vk.5 )
            case A_1_send_case_1
            by solve( !KU( ~x.2 ) @ #vk.10 )
          next
            case A_1_send_case_2
            by solve( !KU( ~x.2 ) @ #vk.11 )
          next
            case B_2_send_case_1
            by solve( !KU( ~y.1 ) @ #vk.10 )
          next
            case B_2_send_case_2
            by solve( !KU( ~y.1 ) @ #vk.11 )
          next
            case c_exp
            by solve( !KU( ~y ) @ #vk.11 )
          qed
        next
          case split_case_6
          solve( !KU( x^(x.1*inv((~y*x.2))) ) @ #vk.5 )
            case A_1_send_case_1
            by solve( !KU( ~y ) @ #vk.10 )
          next
            case A_1_send_case_2
            by solve( !KU( ~y ) @ #vk.12 )
          next
            case A_1_send_case_3
            by solve( !KU( ~x.3 ) @ #vk.11 )
          next
            case A_1_send_case_4
            by solve( !KU( ~x.3 ) @ #vk.12 )
          next
            case B_2_send_case_1
            by solve( !KU( ~y ) @ #vk.15 )
          next
            case B_2_send_case_2
            by solve( !KU( ~y.1 ) @ #vk.17 )
          next
            case B_2_send_case_3
            by solve( !KU( ~y.1 ) @ #vk.11 )
          next
            case B_2_send_case_4
            by solve( !KU( ~y.1 ) @ #vk.12 )
          next
            case c_exp
            by solve( !KU( ~y ) @ #vk.13 )
          qed
        qed
      next
        case c_senc
        solve( !KU( h(~kAB) ) @ #vk.10 )
          case c_h
          solve( !KU( ~kAB ) @ #vk.11 )
            case Reveal_shk_A
            by contradiction /* from formulas */
          next
            case Reveal_shk_B
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  qed
qed

lemma forward_secrecy:
  all-traces
  "∀ A x #i.
    (Secret( A, x ) @ #i) ⇒
    ((¬(∃ #j. K( x ) @ #j)) ∨
     (∃ X #r. ((Rev( X ) @ #r) ∧ (Honest( X ) @ #i)) ∧ (#r < #i)))"
/*
guarded formula characterizing all counter-examples:
"∃ A x #i.
  (Secret( A, x ) @ #i)
 ∧
  (∃ #j. (K( x ) @ #j)) ∧
  (∀ X #r. (Rev( X ) @ #r) ∧ (Honest( X ) @ #i) ⇒ ¬(#r < #i))"
*/
simplify
solve( Secret( A, x ) @ #i )
  case A_4_receive
  solve( St_A_4( A, id, B, kAB, p, x, s, Y ) ▶₀ #i )
    case A_3_send
    solve( !KU( mac(h(z), map(~s, $p)^~x) ) @ #vk.1 )
      case A_3_send
      solve( !KU( h(map(~s, $p)^(~x*~x.1)) ) @ #vk.1 )
        case c_h
        solve( !KU( map(~s, $p)^(~x*~x.1) ) @ #vk.4 )
          case A_1_send_case_1
          by contradiction /* from formulas */
        next
          case A_1_send_case_2
          by solve( !KU( ~x.1 ) @ #vk.5 )
        next
          case A_1_send_case_3
          by solve( !KU( ~x ) @ #vk.8 )
        next
          case B_2_send
          by solve( !KU( ~y ) @ #vk.8 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.7 )
        qed
      qed
    next
      case B_4_send
      solve( !KU( h(map(~s, $p)^(~x*~y)) ) @ #vk.1 )
        case c_h
        solve( !KU( map(~s, $p)^(~x*~y) ) @ #vk.9 )
          case A_1_send_case_1
          by solve( !KU( ~y ) @ #vk.10 )
        next
          case A_1_send_case_2
          by solve( !KU( ~x ) @ #vk.13 )
        next
          case B_2_send_case_1
          by solve( !KU( ~x ) @ #vk.10 )
        next
          case B_2_send_case_2
          by solve( !KU( ~y.1 ) @ #vk.13 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.12 )
        qed
      qed
    next
      case c_mac
      solve( splitEqs(0) )
        case split_case_1
        solve( !KU( h(Y^~x) ) @ #vk.1 )
          case c_h
          solve( !KU( Y^~x ) @ #vk.4 )
            case A_1_send_case_1
            solve( !KU( map(~s, $p) ) @ #vk.3 )
              case A_1_send
              by solve( !KU( ~x ) @ #vk.5 )
            next
              case B_2_send
              by solve( !KU( ~y ) @ #vk.5 )
            next
              case c_map
              solve( !KU( ~s ) @ #vk.4 )
                case A_1_send
                solve( !KU( ~kAB ) @ #vk.7 )
                  case Reveal_shk_A
                  by contradiction /* from formulas */
                next
                  case Reveal_shk_B
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case A_1_send_case_2
            by solve( !KU( ~x ) @ #vk.6 )
          next
            case B_2_send
            by solve( !KU( ~x ) @ #vk.6 )
          next
            case c_exp
            by solve( !KU( ~x ) @ #vk.5 )
          qed
        qed
      next
        case split_case_2
        solve( !KU( z^inv(~x) ) @ #vk.2 )
          case A_1_send_case_1
          by solve( !KU( ~x.1 ) @ #vk.6 )
        next
          case A_1_send_case_2
          by solve( !KU( ~x.1 ) @ #vk.7 )
        next
          case B_2_send_case_1
          by solve( !KU( ~y ) @ #vk.6 )
        next
          case B_2_send_case_2
          by solve( !KU( ~y ) @ #vk.7 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.6 )
        qed
      next
        case split_case_3
        solve( !KU( h(x.1^(~x*x.2)) ) @ #vk.1 )
          case c_h
          solve( !KU( x.1^(~x*x.2) ) @ #vk.4 )
            case A_1_send_case_1
            by solve( !KU( ~x ) @ #vk.5 )
          next
            case A_1_send_case_2
            solve( !KU( map(~s, $p)^x.1 ) @ #vk.3 )
              case A_1_send_case_1
              by contradiction /* from formulas */
            next
              case A_1_send_case_2
              by solve( !KU( ~x ) @ #vk.7 )
            next
              case A_1_send_case_3
              by solve( !KU( ~x ) @ #vk.8 )
            next
              case A_1_send_case_4
              by solve( !KU( ~x ) @ #vk.8 )
            next
              case A_1_send_case_5
              by solve( !KU( ~x ) @ #vk.10 )
            next
              case B_2_send_case_1
              by solve( !KU( ~y ) @ #vk.5 )
            next
              case B_2_send_case_2
              by solve( !KU( ~y ) @ #vk.12 )
            next
              case B_2_send_case_3
              by solve( !KU( ~y ) @ #vk.8 )
            next
              case B_2_send_case_4
              by solve( !KU( ~y ) @ #vk.8 )
            next
              case B_2_send_case_5
              by solve( !KU( ~y ) @ #vk.10 )
            next
              case c_exp
              solve( !KU( map(~s, $p) ) @ #vk.6 )
                case A_1_send
                by solve( !KU( ~x ) @ #vk.8 )
              next
                case B_2_send
                by solve( !KU( ~y ) @ #vk.8 )
              next
                case c_map
                solve( !KU( ~s ) @ #vk.7 )
                  case A_1_send
                  solve( !KU( ~kAB ) @ #vk.10 )
                    case Reveal_shk_A
                    by contradiction /* from formulas */
                  next
                    case Reveal_shk_B
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          next
            case A_1_send_case_3
            by solve( !KU( ~x ) @ #vk.6 )
          next
            case A_1_send_case_4
            by solve( !KU( ~x.2 ) @ #vk.8 )
          next
            case A_1_send_case_5
            by solve( !KU( ~x ) @ #vk.6 )
          next
            case A_1_send_case_6
            by solve( !KU( ~x.3 ) @ #vk.9 )
          next
            case B_2_send_case_1
            by solve( !KU( ~x ) @ #vk.5 )
          next
            case B_2_send_case_2
            by solve( !KU( ~x ) @ #vk.11 )
          next
            case B_2_send_case_3
            by solve( !KU( ~y ) @ #vk.8 )
          next
            case B_2_send_case_4
            by solve( !KU( ~x ) @ #vk.6 )
          next
            case B_2_send_case_5
            by solve( !KU( ~y ) @ #vk.9 )
          next
            case c_exp
            by solve( !KU( ~x ) @ #vk.7 )
          qed
        qed
      next
        case split_case_4
        solve( !KU( x.1^(x.2*inv(~x)) ) @ #vk.2 )
          case A_1_send_case_1
          by solve( !KU( ~x ) @ #vk.5 )
        next
          case A_1_send_case_2
          by solve( !KU( ~x ) @ #vk.7 )
        next
          case A_1_send_case_3
          by solve( !KU( ~x.2 ) @ #vk.7 )
        next
          case A_1_send_case_4
          by solve( !KU( ~x.2 ) @ #vk.8 )
        next
          case B_2_send_case_1
          by solve( !KU( ~x ) @ #vk.10 )
        next
          case B_2_send_case_2
          by solve( !KU( ~x ) @ #vk.12 )
        next
          case B_2_send_case_3
          by solve( !KU( ~y ) @ #vk.7 )
        next
          case B_2_send_case_4
          by solve( !KU( ~y ) @ #vk.8 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.8 )
        qed
      next
        case split_case_5
        solve( !KU( x.1^inv((~x*x.2)) ) @ #vk.2 )
          case A_1_send_case_1
          by solve( !KU( ~x.2 ) @ #vk.6 )
        next
          case A_1_send_case_2
          by solve( !KU( ~x.2 ) @ #vk.7 )
        next
          case B_2_send_case_1
          by solve( !KU( ~y ) @ #vk.6 )
        next
          case B_2_send_case_2
          by solve( !KU( ~y ) @ #vk.7 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.7 )
        qed
      next
        case split_case_6
        solve( !KU( x.1^(x.2*inv((~x*x.3))) ) @ #vk.2 )
          case A_1_send_case_1
          by solve( !KU( ~x ) @ #vk.6 )
        next
          case A_1_send_case_2
          by solve( !KU( ~x ) @ #vk.8 )
        next
          case A_1_send_case_3
          by solve( !KU( ~x.3 ) @ #vk.7 )
        next
          case A_1_send_case_4
          by solve( !KU( ~x.3 ) @ #vk.8 )
        next
          case B_2_send_case_1
          by solve( !KU( ~x ) @ #vk.11 )
        next
          case B_2_send_case_2
          by solve( !KU( ~x ) @ #vk.13 )
        next
          case B_2_send_case_3
          by solve( !KU( ~y ) @ #vk.7 )
        next
          case B_2_send_case_4
          by solve( !KU( ~y ) @ #vk.8 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.9 )
        qed
      qed
    qed
  qed
next
  case B_4_send
  solve( St_B_4( A, id, A.1, kAB, X, p, s, y ) ▶₀ #i )
    case B_3_receive
    solve( !KU( mac(h(z.1), map(s, p)^~y) ) @ #vk.1 )
      case A_3_send
      solve( !KU( h(map(s, p)^(~x*~y)) ) @ #vk.1 )
        case c_h
        solve( !KU( map(s, p)^(~x*~y) ) @ #vk.8 )
          case A_1_send_case_1
          by solve( !KU( ~y ) @ #vk.9 )
        next
          case A_1_send_case_2
          by solve( !KU( ~x.1 ) @ #vk.12 )
        next
          case B_2_send_case_1
          by solve( !KU( ~x ) @ #vk.9 )
        next
          case B_2_send_case_2
          by solve( !KU( ~y.1 ) @ #vk.13 )
        next
          case c_exp
          by solve( !KU( ~x ) @ #vk.11 )
        qed
      qed
    next
      case B_4_send
      solve( !KU( h(map(s, p)^(~y*~y.1)) ) @ #vk.1 )
        case c_h
        solve( !KU( map(s, p)^(~y*~y.1) ) @ #vk.13 )
          case A_1_send
          by solve( !KU( ~x ) @ #vk.17 )
        next
          case B_2_send_case_1
          by solve( !KU( ~y ) @ #vk.14 )
        next
          case B_2_send_case_2
          by solve( !KU( ~y.1 ) @ #vk.13 )
        next
          case B_2_send_case_3
          by solve( !KU( ~y.2 ) @ #vk.18 )
        next
          case c_exp
          by solve( !KU( ~y ) @ #vk.16 )
        qed
      qed
    next
      case c_mac
      solve( !KU( senc(s, h(~kAB)) ) @ #vk.6 )
        case A_1_send
        solve( splitEqs(0) )
          case split_case_1
          solve( !KU( h(X^~y) ) @ #vk.3 )
            case c_h
            solve( !KU( X^~y ) @ #vk.8 )
              case A_1_send
              by solve( !KU( ~y ) @ #vk.10 )
            next
              case B_2_send_case_1
              solve( !KU( map(~s, p) ) @ #vk.6 )
                case A_1_send
                by solve( !KU( ~x ) @ #vk.9 )
              next
                case B_2_send
                by solve( !KU( ~y.1 ) @ #vk.10 )
              next
                case c_map
                solve( !KU( ~s ) @ #vk.8 )
                  case A_1_send
                  solve( !KU( ~kAB ) @ #vk.10 )
                    case Reveal_shk_A
                    by contradiction /* from formulas */
                  next
                    case Reveal_shk_B
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case B_2_send_case_2
              by solve( !KU( ~y ) @ #vk.10 )
            next
              case c_exp
              by solve( !KU( ~y ) @ #vk.9 )
            qed
          qed
        next
          case split_case_2
          solve( !KU( z^inv(~y) ) @ #vk.5 )
            case A_1_send_case_1
            by solve( !KU( ~x.1 ) @ #vk.10 )
          next
            case A_1_send_case_2
            by solve( !KU( ~x.1 ) @ #vk.11 )
          next
            case B_2_send_case_1
            by solve( !KU( ~y.1 ) @ #vk.10 )
          next
            case B_2_send_case_2
            by solve( !KU( ~y.1 ) @ #vk.11 )
          next
            case c_exp
            by solve( !KU( ~y ) @ #vk.10 )
          qed
        next
          case split_case_3
          solve( !KU( h(x^(~y*x.1)) ) @ #vk.3 )
            case c_h
            solve( !KU( x^(~y*x.1) ) @ #vk.8 )
              case A_1_send_case_1
              by solve( !KU( ~y ) @ #vk.9 )
            next
              case A_1_send_case_2
              by solve( !KU( ~y ) @ #vk.10 )
            next
              case A_1_send_case_3
              by solve( !KU( ~x.2 ) @ #vk.12 )
            next
              case A_1_send_case_4
              by solve( !KU( ~y ) @ #vk.10 )
            next
              case A_1_send_case_5
              by solve( !KU( ~x.3 ) @ #vk.13 )
            next
              case B_2_send_case_1
              by solve( !KU( ~y ) @ #vk.9 )
            next
              case B_2_send_case_2
              solve( !KU( map(~s, p)^x ) @ #vk.6 )
                case A_1_send_case_1
                by solve( !KU( ~x ) @ #vk.9 )
              next
                case A_1_send_case_2
                by solve( !KU( ~x ) @ #vk.11 )
              next
                case A_1_send_case_3
                by solve( !KU( ~x.1 ) @ #vk.12 )
              next
                case A_1_send_case_4
                by solve( !KU( ~x.1 ) @ #vk.12 )
              next
                case A_1_send_case_5
                by solve( !KU( ~x.2 ) @ #vk.14 )
              next
                case B_2_send_case_1
                by solve( !KU( ~y ) @ #vk.10 )
              next
                case B_2_send_case_2
                by solve( !KU( ~y ) @ #vk.15 )
              next
                case B_2_send_case_3
                by solve( !KU( ~y.1 ) @ #vk.13 )
              next
                case B_2_send_case_4
                by solve( !KU( ~y.1 ) @ #vk.13 )
              next
                case B_2_send_case_5
                by solve( !KU( ~y.1 ) @ #vk.15 )
              next
                case c_exp
                solve( !KU( map(~s, p) ) @ #vk.10 )
                  case A_1_send
                  by solve( !KU( ~x.1 ) @ #vk.12 )
                next
                  case B_2_send
                  by solve( !KU( ~y.1 ) @ #vk.13 )
                next
                  case c_map
                  solve( !KU( ~s ) @ #vk.11 )
                    case A_1_send
                    solve( !KU( ~kAB ) @ #vk.13 )
                      case Reveal_shk_A
                      by contradiction /* from formulas */
                    next
                      case Reveal_shk_B
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case B_2_send_case_3
              by solve( !KU( ~y.1 ) @ #vk.15 )
            next
              case B_2_send_case_4
              by solve( !KU( ~y.1 ) @ #vk.12 )
            next
              case B_2_send_case_5
              by solve( !KU( ~y ) @ #vk.10 )
            next
              case B_2_send_case_6
              by solve( !KU( ~y.1 ) @ #vk.13 )
            next
              case c_exp
              by solve( !KU( ~y ) @ #vk.11 )
            qed
          qed
        next
          case split_case_4
          solve( !KU( x^(x.1*inv(~y)) ) @ #vk.5 )
            case A_1_send_case_1
            by solve( !KU( ~y ) @ #vk.9 )
          next
            case A_1_send_case_2
            by solve( !KU( ~y ) @ #vk.11 )
          next
            case A_1_send_case_3
            by solve( !KU( ~x.2 ) @ #vk.11 )
          next
            case A_1_send_case_4
            by solve( !KU( ~x.2 ) @ #vk.12 )
          next
            case B_2_send_case_1
            by solve( !KU( ~y ) @ #vk.14 )
          next
            case B_2_send_case_2
            by solve( !KU( ~y.1 ) @ #vk.16 )
          next
            case B_2_send_case_3
            by solve( !KU( ~y.1 ) @ #vk.11 )
          next
            case B_2_send_case_4
            by solve( !KU( ~y.1 ) @ #vk.12 )
          next
            case c_exp
            by solve( !KU( ~y ) @ #vk.12 )
          qed
        next
          case split_case_5
          solve( !KU( x^inv((~y*x.1)) ) @ #vk.5 )
            case A_1_send_case_1
            by solve( !KU( ~x.2 ) @ #vk.10 )
          next
            case A_1_send_case_2
            by solve( !KU( ~x.2 ) @ #vk.11 )
          next
            case B_2_send_case_1
            by solve( !KU( ~y.1 ) @ #vk.10 )
          next
            case B_2_send_case_2
            by solve( !KU( ~y.1 ) @ #vk.11 )
          next
            case c_exp
            by solve( !KU( ~y ) @ #vk.11 )
          qed
        next
          case split_case_6
          solve( !KU( x^(x.1*inv((~y*x.2))) ) @ #vk.5 )
            case A_1_send_case_1
            by solve( !KU( ~y ) @ #vk.10 )
          next
            case A_1_send_case_2
            by solve( !KU( ~y ) @ #vk.12 )
          next
            case A_1_send_case_3
            by solve( !KU( ~x.3 ) @ #vk.11 )
          next
            case A_1_send_case_4
            by solve( !KU( ~x.3 ) @ #vk.12 )
          next
            case B_2_send_case_1
            by solve( !KU( ~y ) @ #vk.15 )
          next
            case B_2_send_case_2
            by solve( !KU( ~y.1 ) @ #vk.17 )
          next
            case B_2_send_case_3
            by solve( !KU( ~y.1 ) @ #vk.11 )
          next
            case B_2_send_case_4
            by solve( !KU( ~y.1 ) @ #vk.12 )
          next
            case c_exp
            by solve( !KU( ~y ) @ #vk.13 )
          qed
        qed
      next
        case c_senc
        solve( !KU( h(~kAB) ) @ #vk.10 )
          case c_h
          solve( !KU( ~kAB ) @ #vk.11 )
            case Reveal_shk_A
            by contradiction /* from formulas */
          next
            case Reveal_shk_B
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  qed
qed

/* All well-formedness checks were successful. */

end